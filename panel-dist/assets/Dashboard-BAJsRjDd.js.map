{"version":3,"file":"Dashboard-BAJsRjDd.js","sources":["../../src/pages/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  Card,\n  CardBody,\n  CardHeader,\n  Progress,\n  Badge,\n  Icon,\n  useColorModeValue,\n  Flex,\n  Spacer,\n  Button,\n  useToast,\n  Spinner,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react';\nimport {\n  FaUsers,\n  FaUsersCog,\n  FaWhatsapp,\n  FaCheckCircle,\n  FaTimesCircle,\n  FaClock,\n  FaChartLine,\n  FaExclamationTriangle,\n  FaPlay,\n  FaStop,\n  FaSync,\n} from 'react-icons/fa';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { apiService } from '../services/api';\n\nexport const Dashboard: React.FC = () => {\n  const toast = useToast();\n  const queryClient = useQueryClient();\n\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // Queries\n  const { data: botStatus, isLoading: botLoading } = useQuery('botStatus', apiService.getBotStatus);\n  const { data: stats, isLoading: statsLoading } = useQuery('dashboardStats', apiService.getStats);\n  const { data: userStats } = useQuery('userStats', apiService.getUsuarioStats);\n  const { data: groupStats } = useQuery('groupStats', apiService.getGroupStats);\n\n  // Mutations\n  const restartBotMutation = useMutation(apiService.restartBot, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('botStatus');\n      toast({\n        title: 'Bot reiniciado',\n        description: 'El bot ha sido reiniciado exitosamente',\n        status: 'success',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Error al reiniciar el bot',\n        status: 'error',\n      });\n    },\n  });\n\n  const disconnectBotMutation = useMutation(apiService.disconnectBot, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('botStatus');\n      toast({\n        title: 'Bot desconectado',\n        description: 'El bot ha sido desconectado exitosamente',\n        status: 'success',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Error al desconectar el bot',\n        status: 'error',\n      });\n    },\n  });\n\n  const handleRestartBot = () => {\n    if (window.confirm('¿Estás seguro de que quieres reiniciar el bot?')) {\n      restartBotMutation.mutate();\n    }\n  };\n\n  const handleDisconnectBot = () => {\n    if (window.confirm('¿Estás seguro de que quieres desconectar el bot?')) {\n      disconnectBotMutation.mutate();\n    }\n  };\n\n  if (botLoading || statsLoading) {\n    return (\n      <Box textAlign=\"center\" py={10}>\n        <Spinner size=\"xl\" />\n        <Heading mt={4}>Cargando dashboard...</Heading>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <VStack spacing={6} align=\"stretch\">\n        {/* Header */}\n        <Flex align=\"center\" justify=\"space-between\">\n          <Box>\n            <Heading size=\"lg\">Dashboard</Heading>\n            <Text color=\"gray.600\" mt={1}>\n              Panel de control y estadísticas del sistema\n            </Text>\n          </Box>\n          <HStack spacing={3}>\n            <Button\n              leftIcon={<FaSync />}\n              colorScheme=\"blue\"\n              variant=\"outline\"\n              onClick={() => queryClient.invalidateQueries()}\n              isLoading={botLoading || statsLoading}\n            >\n              Actualizar\n            </Button>\n          </HStack>\n        </Flex>\n\n        {/* Estado del Bot */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardHeader>\n            <HStack>\n              <Icon as={FaWhatsapp} color=\"green.500\" />\n              <Heading size=\"md\">Estado del Bot</Heading>\n            </HStack>\n          </CardHeader>\n          <CardBody>\n            <SimpleGrid columns={{ base: 1, md: 4 }} spacing={6}>\n              <Stat>\n                <StatLabel>Estado de Conexión</StatLabel>\n                <StatNumber color={botStatus?.connected ? 'green.400' : 'red.400'}>\n                  {botStatus?.connected ? 'Conectado' : 'Desconectado'}\n                </StatNumber>\n                <StatHelpText>\n                  <Icon as={botStatus?.connected ? FaCheckCircle : FaTimesCircle} mr={1} />\n                  {botStatus?.connected ? 'Bot activo' : 'Bot inactivo'}\n                </StatHelpText>\n              </Stat>\n              \n              <Stat>\n                <StatLabel>Número de Teléfono</StatLabel>\n                <StatNumber fontSize=\"lg\">\n                  {botStatus?.phone || 'No disponible'}\n                </StatNumber>\n                <StatHelpText>WhatsApp conectado</StatHelpText>\n              </Stat>\n              \n              <Stat>\n                <StatLabel>Tiempo Activo</StatLabel>\n                <StatNumber>{botStatus?.uptime || '0h 0m'}</StatNumber>\n                <StatHelpText>\n                  <Icon as={FaClock} mr={1} />\n                  Uptime del bot\n                </StatHelpText>\n              </Stat>\n              \n              <Stat>\n                <StatLabel>Última Actividad</StatLabel>\n                <StatNumber fontSize=\"sm\">\n                  {botStatus?.lastSeen ? new Date(botStatus.lastSeen).toLocaleString() : 'N/A'}\n                </StatNumber>\n                <StatHelpText>Última vez activo</StatHelpText>\n              </Stat>\n            </SimpleGrid>\n            \n            <HStack mt={6} spacing={4}>\n              <Button\n                leftIcon={<FaPlay />}\n                colorScheme=\"green\"\n                onClick={handleRestartBot}\n                isLoading={restartBotMutation.isLoading}\n                isDisabled={!botStatus?.connected}\n              >\n                Reiniciar Bot\n              </Button>\n              <Button\n                leftIcon={<FaStop />}\n                colorScheme=\"red\"\n                variant=\"outline\"\n                onClick={handleDisconnectBot}\n                isLoading={disconnectBotMutation.isLoading}\n                isDisabled={!botStatus?.connected}\n              >\n                Desconectar Bot\n              </Button>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Estadísticas Generales */}\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={6}>\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaUsers} color=\"blue.500\" />\n                    <Text>Total Usuarios</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{userStats?.totalUsuarios || 0}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  {userStats?.usuariosActivos || 0} activos\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaUsersCog} color=\"green.500\" />\n                    <Text>Total Grupos</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{groupStats?.totalGrupos || 0}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  {groupStats?.gruposAutorizados || 0} autorizados\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaChartLine} color=\"purple.500\" />\n                    <Text>Total Aportes</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{stats?.totalAportes || 0}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  Contenido compartido\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaExclamationTriangle} color=\"orange.500\" />\n                    <Text>Pedidos Pendientes</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{stats?.pedidosPendientes || 0}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"decrease\" />\n                  Requieren atención\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n\n        {/* Detalles de Usuarios y Grupos */}\n        <SimpleGrid columns={{ base: 1, lg: 2 }} spacing={6}>\n          {/* Usuarios por Rol */}\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardHeader>\n              <Heading size=\"md\">Usuarios por Rol</Heading>\n            </CardHeader>\n            <CardBody>\n              <VStack spacing={4} align=\"stretch\">\n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"red\">Admin</Badge>\n                    <Text fontSize=\"sm\">Administradores</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{userStats?.totalAdmins || 0}</Text>\n                </HStack>\n                <Progress value={(userStats?.totalAdmins || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"red\" />\n                \n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"blue\">Creador</Badge>\n                    <Text fontSize=\"sm\">Creadores</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{userStats?.totalCreadores || 0}</Text>\n                </HStack>\n                <Progress value={(userStats?.totalCreadores || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"blue\" />\n                \n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"green\">Moderador</Badge>\n                    <Text fontSize=\"sm\">Moderadores</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{userStats?.totalModeradores || 0}</Text>\n                </HStack>\n                <Progress value={(userStats?.totalModeradores || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"green\" />\n                \n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"gray\">Usuario</Badge>\n                    <Text fontSize=\"sm\">Usuarios</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{userStats?.totalUsuarios - (userStats?.totalAdmins || 0) - (userStats?.totalCreadores || 0) - (userStats?.totalModeradores || 0) || 0}</Text>\n                </HStack>\n                <Progress value={(userStats?.totalUsuarios - (userStats?.totalAdmins || 0) - (userStats?.totalCreadores || 0) - (userStats?.totalModeradores || 0) || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"gray\" />\n              </VStack>\n            </CardBody>\n          </Card>\n\n          {/* Estado de Grupos */}\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardHeader>\n              <Heading size=\"md\">Estado de Grupos</Heading>\n            </CardHeader>\n            <CardBody>\n              <VStack spacing={4} align=\"stretch\">\n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"green\">Autorizados</Badge>\n                    <Text fontSize=\"sm\">Grupos autorizados</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{groupStats?.gruposAutorizados || 0}</Text>\n                </HStack>\n                <Progress value={(groupStats?.gruposAutorizados || 0) / (groupStats?.totalGrupos || 1) * 100} colorScheme=\"green\" />\n                \n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"blue\">Proveedores</Badge>\n                    <Text fontSize=\"sm\">Grupos proveedores</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{groupStats?.gruposProveedores || 0}</Text>\n                </HStack>\n                <Progress value={(groupStats?.gruposProveedores || 0) / (groupStats?.totalGrupos || 1) * 100} colorScheme=\"blue\" />\n                \n                <HStack justify=\"space-between\">\n                  <HStack>\n                    <Badge colorScheme=\"red\">No autorizados</Badge>\n                    <Text fontSize=\"sm\">Grupos pendientes</Text>\n                  </HStack>\n                  <Text fontWeight=\"semibold\">{(groupStats?.totalGrupos || 0) - (groupStats?.gruposAutorizados || 0)}</Text>\n                </HStack>\n                <Progress value={((groupStats?.totalGrupos || 0) - (groupStats?.gruposAutorizados || 0)) / (groupStats?.totalGrupos || 1) * 100} colorScheme=\"red\" />\n              </VStack>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n\n        {/* Alertas y Notificaciones */}\n        {(!botStatus?.connected || (stats?.pedidosPendientes || 0) > 0) && (\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardHeader>\n              <Heading size=\"md\">Alertas del Sistema</Heading>\n            </CardHeader>\n            <CardBody>\n              <VStack spacing={3} align=\"stretch\">\n                {!botStatus?.connected && (\n                  <Alert status=\"error\">\n                    <AlertIcon />\n                    <Box>\n                      <Text fontWeight=\"semibold\">Bot desconectado</Text>\n                      <Text fontSize=\"sm\">El bot de WhatsApp no está conectado. Revisa la conexión.</Text>\n                    </Box>\n                  </Alert>\n                )}\n                \n                {(stats?.pedidosPendientes || 0) > 0 && (\n                  <Alert status=\"warning\">\n                    <AlertIcon />\n                    <Box>\n                      <Text fontWeight=\"semibold\">Pedidos pendientes</Text>\n                      <Text fontSize=\"sm\">Hay {stats.pedidosPendientes} pedidos que requieren atención.</Text>\n                    </Box>\n                  </Alert>\n                )}\n              </VStack>\n            </CardBody>\n          </Card>\n        )}\n      </VStack>\n    </Box>\n  );\n};\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["Dashboard","toast","useToast","queryClient","useQueryClient","cardBg","useColorModeValue","borderColor","botStatus","botLoading","useQuery","apiService","stats","statsLoading","userStats","groupStats","restartBotMutation","useMutation","error","_b","_a","disconnectBotMutation","handleRestartBot","handleDisconnectBot","jsxs","Box","jsx","Spinner","Heading","VStack","Flex","Text","HStack","Button","FaSync","Card","CardHeader","Icon","FaWhatsapp","CardBody","SimpleGrid","Stat","StatLabel","StatNumber","StatHelpText","FaCheckCircle","FaTimesCircle","FaClock","FaPlay","FaStop","FaUsers","StatArrow","FaUsersCog","FaChartLine","FaExclamationTriangle","Badge","Progress","Alert","AlertIcon"],"mappings":"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"}