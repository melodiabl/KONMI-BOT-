{"version":3,"file":"Pedidos-DXbshbPX.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/link/link.mjs","../../src/pages/Pedidos.tsx"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Link = forwardRef(function Link2(props, ref) {\n  const styles = useStyleConfig(\"Link\", props);\n  const { className, isExternal, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.a,\n    {\n      target: isExternal ? \"_blank\" : void 0,\n      rel: isExternal ? \"noopener\" : void 0,\n      ref,\n      className: cx(\"chakra-link\", className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nLink.displayName = \"Link\";\n\nexport { Link };\n","import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Badge,\n  IconButton,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormControl,\n  FormLabel,\n  Textarea,\n  Select,\n  useToast,\n  Spinner,\n  Alert,\n  AlertIcon,\n  Flex,\n  Card,\n  CardBody,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  useColorModeValue,\n  Tooltip,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuDivider,\n  Link,\n  Avatar,\n} from '@chakra-ui/react';\nimport {\n  FaSearch,\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaEye,\n  FaEllipsisV,\n  FaCheck,\n  FaTimes,\n  FaClock,\n  FaUser,\n  FaFileAlt,\n  FaLink,\n  FaDownload,\n  FaShare,\n  FaExclamationTriangle,\n  FaCheckCircle,\n  FaHourglassHalf,\n  FaBan,\n} from 'react-icons/fa';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { apiService } from '../services/api';\nimport { Pedido } from '../types';\n\n\n\ninterface PedidoFormData {\n  titulo: string;\n  descripcion: string;\n  contenido_solicitado: string;\n  estado: 'pendiente' | 'resuelto';\n  prioridad: string;\n  grupo_id?: number;\n}\n\nconst estadoColors = {\n  pendiente: 'yellow',\n  resuelto: 'green',\n};\n\nconst prioridadColors = {\n  baja: 'green',\n  media: 'yellow',\n  alta: 'orange',\n  urgente: 'red',\n};\n\nexport const Pedidos: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [estadoFilter, setEstadoFilter] = useState('');\n  const [prioridadFilter, setPrioridadFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [editingPedido, setEditingPedido] = useState<Pedido | null>(null);\n  const [formData, setFormData] = useState<PedidoFormData>({\n    titulo: '',\n    descripcion: '',\n    contenido_solicitado: '',\n    estado: 'pendiente',\n    prioridad: 'media',\n  });\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const toast = useToast();\n  const queryClient = useQueryClient();\n\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // Queries\n  const { data: pedidosData, isLoading, error } = useQuery(\n    ['pedidos', currentPage, searchTerm, estadoFilter, prioridadFilter],\n    () => apiService.getPedidos(currentPage, 20, searchTerm, estadoFilter)\n  );\n\n  const { data: stats } = useQuery('pedidoStats', apiService.getPedidoStats);\n\n  // Mutations\n  const createPedidoMutation = useMutation(apiService.createPedido, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('pedidos');\n      toast({\n        title: 'Pedido creado',\n        description: 'El pedido ha sido creado exitosamente',\n        status: 'success',\n      });\n      onClose();\n      resetForm();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Error al crear pedido',\n        status: 'error',\n      });\n    },\n  });\n\n  const updatePedidoMutation = useMutation(\n    (data: { id: number; pedido: Partial<Pedido> }) =>\n      apiService.updatePedido(data.id, data.pedido),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('pedidos');\n        toast({\n          title: 'Pedido actualizado',\n          description: 'El pedido ha sido actualizado exitosamente',\n          status: 'success',\n        });\n        onClose();\n        resetForm();\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al actualizar pedido',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const deletePedidoMutation = useMutation(apiService.deletePedido, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('pedidos');\n      toast({\n        title: 'Pedido eliminado',\n        description: 'El pedido ha sido eliminado exitosamente',\n        status: 'success',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Error al eliminar pedido',\n        status: 'error',\n      });\n    },\n  });\n\n  const resolvePedidoMutation = useMutation(\n    (data: { id: number; aporte_id?: number }) =>\n      apiService.resolvePedido(data.id, data.aporte_id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('pedidos');\n        toast({\n          title: 'Pedido resuelto',\n          description: 'El pedido ha sido marcado como completado',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al resolver pedido',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const resetForm = () => {\n    setFormData({\n      titulo: '',\n      descripcion: '',\n      contenido_solicitado: '',\n      estado: 'pendiente',\n      prioridad: 'media',\n    });\n    setEditingPedido(null);\n  };\n\n  const handleOpenCreate = () => {\n    resetForm();\n    onOpen();\n  };\n\n  const handleOpenEdit = (pedido: Pedido) => {\n    setEditingPedido(pedido);\n    setFormData({\n      titulo: pedido.titulo,\n      descripcion: pedido.descripcion || '',\n      contenido_solicitado: pedido.contenido_solicitado,\n      estado: pedido.estado as 'pendiente' | 'resuelto',\n      prioridad: pedido.prioridad,\n      grupo_id: pedido.grupo_id,\n    });\n    onOpen();\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (editingPedido) {\n      updatePedidoMutation.mutate({\n        id: editingPedido.id,\n        pedido: formData as Partial<Pedido>,\n      });\n    } else {\n      createPedidoMutation.mutate(formData as Partial<Pedido>);\n    }\n  };\n\n  const handleDelete = (pedidoId: number) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este pedido?')) {\n      deletePedidoMutation.mutate(pedidoId);\n    }\n  };\n\n  const handleResolve = (pedidoId: number) => {\n    const aporteId = window.prompt('ID del aporte relacionado (opcional):');\n    resolvePedidoMutation.mutate({ id: pedidoId, aporte_id: aporteId ? parseInt(aporteId) : undefined });\n  };\n\n  const handleEstadoChange = (pedidoId: number, newEstado: 'pendiente' | 'resuelto') => {\n    updatePedidoMutation.mutate({\n      id: pedidoId,\n      pedido: { estado: newEstado },\n    });\n  };\n\n  if (error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        Error al cargar pedidos: {(error as any).message}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <VStack spacing={6} align=\"stretch\">\n        {/* Header */}\n        <Flex align=\"center\" justify=\"space-between\">\n          <Heading size=\"lg\">Gestión de Pedidos</Heading>\n          <Button\n            leftIcon={<FaPlus />}\n            colorScheme=\"green\"\n            onClick={handleOpenCreate}\n          >\n            Nuevo Pedido\n          </Button>\n        </Flex>\n\n        {/* Estadísticas */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <HStack spacing={8} justify=\"center\">\n              <Stat textAlign=\"center\">\n                <StatLabel>Total Pedidos</StatLabel>\n                <StatNumber>{stats?.totalPedidos || 0}</StatNumber>\n                <StatHelpText>En el sistema</StatHelpText>\n              </Stat>\n              <Stat textAlign=\"center\">\n                <StatLabel>Pendientes</StatLabel>\n                <StatNumber color=\"yellow.500\">{stats?.pedidosPendientes || 0}</StatNumber>\n                <StatHelpText>Requieren atención</StatHelpText>\n              </Stat>\n              <Stat textAlign=\"center\">\n                <StatLabel>En Proceso</StatLabel>\n                <StatNumber color=\"blue.500\">{stats?.pedidosEnProceso || 0}</StatNumber>\n                <StatHelpText>En desarrollo</StatHelpText>\n              </Stat>\n              <Stat textAlign=\"center\">\n                <StatLabel>Completados</StatLabel>\n                <StatNumber color=\"green.500\">{stats?.pedidosCompletados || 0}</StatNumber>\n                <StatHelpText>Finalizados</StatHelpText>\n              </Stat>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Filtros */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <HStack spacing={4} wrap=\"wrap\">\n              <InputGroup maxW=\"300px\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <FaSearch color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  placeholder=\"Buscar pedidos...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </InputGroup>\n              <Select\n                placeholder=\"Filtrar por estado\"\n                value={estadoFilter}\n                onChange={(e) => setEstadoFilter(e.target.value)}\n                maxW=\"200px\"\n              >\n                <option value=\"pendiente\">Pendiente</option>\n                <option value=\"resuelto\">Resuelto</option>\n              </Select>\n              <Select\n                placeholder=\"Filtrar por prioridad\"\n                value={prioridadFilter}\n                onChange={(e) => setPrioridadFilter(e.target.value)}\n                maxW=\"200px\"\n              >\n                <option value=\"baja\">Baja</option>\n                <option value=\"media\">Media</option>\n                <option value=\"alta\">Alta</option>\n                <option value=\"urgente\">Urgente</option>\n              </Select>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Tabla */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            {isLoading ? (\n              <Box textAlign=\"center\" py={8}>\n                <Spinner size=\"xl\" />\n                <Text mt={4}>Cargando pedidos...</Text>\n              </Box>\n            ) : (\n              <Box overflowX=\"auto\">\n                <Table variant=\"simple\">\n                  <Thead>\n                    <Tr>\n                      <Th>Título</Th>\n                      <Th>Estado</Th>\n                      <Th>Prioridad</Th>\n                      <Th>Usuario</Th>\n                      <Th>Aporte Relacionado</Th>\n                      <Th>Fecha</Th>\n                      <Th>Acciones</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {pedidosData?.pedidos?.map((pedido: Pedido) => (\n                      <Tr key={pedido.id}>\n                        <Td>\n                          <VStack align=\"start\" spacing={1}>\n                            <Text fontWeight=\"semibold\">{pedido.titulo}</Text>\n                            {pedido.descripcion && (\n                              <Text fontSize=\"sm\" color=\"gray.500\" noOfLines={2}>\n                                {pedido.descripcion}\n                              </Text>\n                            )}\n                            <Text fontSize=\"xs\" color=\"gray.400\">\n                              ID: {pedido.id}\n                            </Text>\n                          </VStack>\n                        </Td>\n                        <Td>\n                          <Badge\n                            colorScheme={estadoColors[pedido.estado as keyof typeof estadoColors] || 'gray'}\n                            variant=\"subtle\"\n                          >\n                            {pedido.estado.replace('_', ' ')}\n                          </Badge>\n                        </Td>\n                        <Td>\n                          <Badge\n                            colorScheme={prioridadColors[pedido.prioridad as keyof typeof prioridadColors] || 'gray'}\n                            variant=\"subtle\"\n                          >\n                            {pedido.prioridad}\n                          </Badge>\n                        </Td>\n                        <Td>\n                          <HStack>\n                            <Avatar size=\"sm\" name={pedido.usuario?.username} />\n                            <Text fontSize=\"sm\">{pedido.usuario?.username || 'N/A'}</Text>\n                          </HStack>\n                        </Td>\n                        <Td>\n                          {pedido.aporte ? (\n                            <Link color=\"blue.500\" fontSize=\"sm\">\n                              {pedido.aporte.titulo}\n                            </Link>\n                          ) : (\n                            <Text fontSize=\"sm\" color=\"gray.500\">\n                              Sin aporte\n                            </Text>\n                          )}\n                        </Td>\n                        <Td>\n                          <VStack align=\"start\" spacing={0}>\n                            <Text fontSize=\"sm\">\n                              {new Date(pedido.created_at).toLocaleDateString()}\n                            </Text>\n                            <Text fontSize=\"xs\" color=\"gray.500\">\n                              {new Date(pedido.created_at).toLocaleTimeString()}\n                            </Text>\n                          </VStack>\n                        </Td>\n                        <Td>\n                          <HStack spacing={2}>\n                            <Tooltip label=\"Ver detalles\">\n                              <IconButton\n                                aria-label=\"Ver detalles\"\n                                icon={<FaEye />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                colorScheme=\"blue\"\n                              />\n                            </Tooltip>\n                            <Tooltip label=\"Editar pedido\">\n                              <IconButton\n                                aria-label=\"Editar pedido\"\n                                icon={<FaEdit />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                colorScheme=\"orange\"\n                                onClick={() => handleOpenEdit(pedido)}\n                              />\n                            </Tooltip>\n                            <Menu>\n                              <MenuButton\n                                as={IconButton}\n                                aria-label=\"Más opciones\"\n                                icon={<FaEllipsisV />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                              />\n                              <MenuList>\n                                {pedido.estado === 'pendiente' && (\n                                  <>\n                                    <MenuItem\n                                      icon={<FaHourglassHalf />}\n                                      onClick={() => handleEstadoChange(pedido.id, 'resuelto')}\n                                    >\n                                      Marcar en proceso\n                                    </MenuItem>\n                                    <MenuItem\n                                      icon={<FaCheckCircle />}\n                                      onClick={() => handleResolve(pedido.id)}\n                                    >\n                                      Completar\n                                    </MenuItem>\n                                  </>\n                                )}\n                                {pedido.estado === 'resuelto' && (\n                                  <MenuItem\n                                    icon={<FaCheckCircle />}\n                                    onClick={() => handleResolve(pedido.id)}\n                                  >\n                                    Completar\n                                  </MenuItem>\n                                )}\n                                {pedido.estado === 'pendiente' && (\n                                  <>\n                                    <MenuItem\n                                      icon={<FaBan />}\n                                      onClick={() => handleEstadoChange(pedido.id, 'resuelto')}\n                                    >\n                                      Cancelar\n                                    </MenuItem>\n                                    <MenuItem\n                                      icon={<FaTimes />}\n                                      onClick={() => handleEstadoChange(pedido.id, 'resuelto')}\n                                    >\n                                      Rechazar\n                                    </MenuItem>\n                                  </>\n                                )}\n                                <MenuDivider />\n                                <MenuItem\n                                  icon={<FaTrash />}\n                                  color=\"red.500\"\n                                  onClick={() => handleDelete(pedido.id)}\n                                >\n                                  Eliminar\n                                </MenuItem>\n                              </MenuList>\n                            </Menu>\n                          </HStack>\n                        </Td>\n                      </Tr>\n                    ))}\n                  </Tbody>\n                </Table>\n              </Box>\n            )}\n\n            {/* Paginación */}\n            {pedidosData?.pagination && (\n              <Flex justify=\"center\" mt={6}>\n                <HStack spacing={2}>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                    isDisabled={currentPage === 1}\n                  >\n                    Anterior\n                  </Button>\n                  <Text>\n                    Página {currentPage} de {pedidosData.pagination.totalPages}\n                  </Text>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                    isDisabled={currentPage === pedidosData.pagination.totalPages}\n                  >\n                    Siguiente\n                  </Button>\n                </HStack>\n              </Flex>\n            )}\n          </CardBody>\n        </Card>\n      </VStack>\n\n      {/* Modal de Crear/Editar Pedido */}\n      <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <form onSubmit={handleSubmit}>\n            <ModalHeader>\n              {editingPedido ? 'Editar Pedido' : 'Crear Nuevo Pedido'}\n            </ModalHeader>\n            <ModalBody>\n              <VStack spacing={4}>\n                <FormControl isRequired>\n                  <FormLabel>Título</FormLabel>\n                  <Input\n                    value={formData.titulo}\n                    onChange={(e) => setFormData({ ...formData, titulo: e.target.value })}\n                    placeholder=\"Ingresa el título del pedido\"\n                  />\n                </FormControl>\n\n                <FormControl>\n                  <FormLabel>Descripción</FormLabel>\n                  <Textarea\n                    value={formData.descripcion}\n                    onChange={(e) => setFormData({ ...formData, descripcion: e.target.value })}\n                    placeholder=\"Descripción opcional del pedido\"\n                    rows={3}\n                  />\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Contenido Solicitado</FormLabel>\n                  <Textarea\n                    value={formData.contenido_solicitado}\n                    onChange={(e) => setFormData({ ...formData, contenido_solicitado: e.target.value })}\n                    placeholder=\"Describe el contenido que necesitas\"\n                    rows={5}\n                  />\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Estado</FormLabel>\n                  <Select\n                    value={formData.estado}\n                    onChange={(e) => setFormData({ ...formData, estado: e.target.value as 'pendiente' | 'resuelto' })}\n                  >\n                    <option value=\"pendiente\">Pendiente</option>\n                    <option value=\"resuelto\">Resuelto</option>\n                  </Select>\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Prioridad</FormLabel>\n                  <Select\n                    value={formData.prioridad}\n                    onChange={(e) => setFormData({ ...formData, prioridad: e.target.value })}\n                  >\n                    <option value=\"baja\">Baja</option>\n                    <option value=\"media\">Media</option>\n                    <option value=\"alta\">Alta</option>\n                    <option value=\"urgente\">Urgente</option>\n                  </Select>\n                </FormControl>\n              </VStack>\n            </ModalBody>\n            <ModalFooter>\n              <Button variant=\"ghost\" mr={3} onClick={onClose}>\n                Cancelar\n              </Button>\n              <Button\n                colorScheme=\"blue\"\n                type=\"submit\"\n                isLoading={createPedidoMutation.isLoading || updatePedidoMutation.isLoading}\n              >\n                {editingPedido ? 'Actualizar' : 'Crear'}\n              </Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Pedidos;\n\n\n\n"],"names":["Link","forwardRef","props","ref","styles","useStyleConfig","className","isExternal","rest","omitThemingProps","jsx","chakra","cx","estadoColors","prioridadColors","Pedidos","searchTerm","setSearchTerm","useState","estadoFilter","setEstadoFilter","prioridadFilter","setPrioridadFilter","currentPage","setCurrentPage","editingPedido","setEditingPedido","formData","setFormData","isOpen","onOpen","onClose","useDisclosure","toast","useToast","queryClient","useQueryClient","cardBg","useColorModeValue","borderColor","pedidosData","isLoading","error","useQuery","apiService","stats","createPedidoMutation","useMutation","resetForm","updatePedidoMutation","data","deletePedidoMutation","resolvePedidoMutation","handleOpenCreate","handleOpenEdit","pedido","handleSubmit","e","handleDelete","pedidoId","handleResolve","aporteId","handleEstadoChange","newEstado","jsxs","Alert","AlertIcon","Box","VStack","Flex","Heading","Button","FaPlus","Card","CardBody","HStack","Stat","StatLabel","StatNumber","StatHelpText","InputGroup","InputLeftElement","FaSearch","Input","Select","Spinner","Text","Table","Thead","Tr","Th","Tbody","_a","Td","Badge","Avatar","_b","Tooltip","IconButton","FaEye","FaEdit","Menu","MenuButton","FaEllipsisV","MenuList","Fragment","MenuItem","FaHourglassHalf","FaCheckCircle","FaBan","FaTimes","MenuDivider","FaTrash","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","FormControl","FormLabel","Textarea","ModalFooter"],"mappings":"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","x_google_ignoreList":[0]}