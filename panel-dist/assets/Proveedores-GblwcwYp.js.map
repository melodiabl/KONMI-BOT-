{"version":3,"file":"Proveedores-GblwcwYp.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-context.mjs","../../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-icon.mjs","../../node_modules/@chakra-ui/react/dist/esm/checkbox/use-initial-animation-state.mjs","../../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox.mjs","../../node_modules/@chakra-ui/react/dist/esm/checkbox/use-checkbox-group.mjs","../../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-group.mjs","../../node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","../../node_modules/@chakra-ui/react/dist/esm/tag/tag.mjs","../../node_modules/dayjs/dayjs.min.js","../../src/pages/Proveedores.tsx"],"sourcesContent":["'use client';\nimport { createContext } from '@chakra-ui/utils/context';\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport { CheckboxGroupProvider, useCheckboxGroupContext };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ jsx(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\nexport { CheckboxIcon };\n","'use client';\nimport { useState } from 'react';\n\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\nexport { useInitialAnimationState };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { callAll, compact, cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useMemo, cloneElement } from 'react';\nimport { useCheckboxGroupContext } from './checkbox-context.mjs';\nimport { CheckboxIcon } from './checkbox-icon.mjs';\nimport { useCheckbox } from './use-checkbox.mjs';\nimport { useInitialAnimationState } from './use-initial-animation-state.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nconst rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nconst Checkbox = forwardRef(\n  function Checkbox2(props, ref) {\n    const group = useCheckboxGroupContext();\n    const mergedProps = { ...group, ...props };\n    const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n    const ownProps = omitThemingProps(props);\n    const {\n      spacing = \"0.5rem\",\n      className,\n      children,\n      iconColor,\n      iconSize,\n      icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n      isChecked: isCheckedProp,\n      isDisabled = group?.isDisabled,\n      onChange: onChangeProp,\n      inputProps,\n      ...rest\n    } = ownProps;\n    let isChecked = isCheckedProp;\n    if (group?.value && ownProps.value) {\n      isChecked = group.value.includes(ownProps.value);\n    }\n    let onChange = onChangeProp;\n    if (group?.onChange && ownProps.value) {\n      onChange = callAll(group.onChange, onChangeProp);\n    }\n    const {\n      state,\n      getInputProps,\n      getCheckboxProps,\n      getLabelProps,\n      getRootProps\n    } = useCheckbox({\n      ...rest,\n      isDisabled,\n      isChecked,\n      onChange\n    });\n    const shouldAnimate = useInitialAnimationState(state.isChecked);\n    const iconStyles = useMemo(\n      () => ({\n        animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n        ...styles.icon,\n        ...compact({\n          fontSize: iconSize,\n          color: iconColor\n        })\n      }),\n      [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]\n    );\n    const clonedIcon = cloneElement(icon, {\n      __css: iconStyles,\n      isIndeterminate: state.isIndeterminate,\n      isChecked: state.isChecked\n    });\n    return /* @__PURE__ */ jsxs(\n      chakra.label,\n      {\n        __css: { ...rootStyles, ...styles.container },\n        className: cx(\"chakra-checkbox\", className),\n        ...getRootProps(),\n        children: [\n          /* @__PURE__ */ jsx(\n            \"input\",\n            {\n              className: \"chakra-checkbox__input\",\n              ...getInputProps(inputProps, ref)\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              __css: { ...controlStyles, ...styles.control },\n              className: \"chakra-checkbox__control\",\n              ...getCheckboxProps(),\n              children: clonedIcon\n            }\n          ),\n          children && /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              className: \"chakra-checkbox__label\",\n              ...getLabelProps(),\n              __css: {\n                marginStart: spacing,\n                ...styles.label\n              },\n              children\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n","'use client';\nimport { useCallbackRef, useControllableState } from '@chakra-ui/hooks';\nimport { isObject } from '@chakra-ui/utils';\nimport { useCallback } from 'react';\n\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback(\n    (eventOrValue) => {\n      if (!value)\n        return;\n      const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n      const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n      const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n      setValue(nextValue);\n    },\n    [setValue, value]\n  );\n  const getCheckboxProps = useCallback(\n    (props2 = {}) => {\n      const checkedKey = isNative ? \"checked\" : \"isChecked\";\n      return {\n        ...props2,\n        [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n        onChange: handleChange\n      };\n    },\n    [handleChange, isNative, value]\n  );\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\nexport { useCheckboxGroup };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { useMemo } from 'react';\nimport { CheckboxGroupProvider } from './checkbox-context.mjs';\nimport { useCheckboxGroup } from './use-checkbox-group.mjs';\n\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = useMemo(\n    () => ({\n      size,\n      onChange,\n      colorScheme,\n      value,\n      variant,\n      isDisabled\n    }),\n    [size, onChange, colorScheme, value, variant, isDisabled]\n  );\n  return /* @__PURE__ */ jsx(CheckboxGroupProvider, { value: group, children });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\nexport { CheckboxGroup };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext } from '@chakra-ui/utils';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [TagStylesProvider, useTagStyles] = createContext({\n  name: `TagStylesContext`,\n  errorMessage: `useTagStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<Tag />\" `\n});\nconst Tag = forwardRef((props, ref) => {\n  const styles = useMultiStyleConfig(\"Tag\", props);\n  const ownProps = omitThemingProps(props);\n  const containerStyles = {\n    display: \"inline-flex\",\n    verticalAlign: \"top\",\n    alignItems: \"center\",\n    maxWidth: \"100%\",\n    ...styles.container\n  };\n  return /* @__PURE__ */ jsx(TagStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(chakra.span, { ref, ...ownProps, __css: containerStyles }) });\n});\nTag.displayName = \"Tag\";\nconst TagLabel = forwardRef((props, ref) => {\n  const styles = useTagStyles();\n  return /* @__PURE__ */ jsx(chakra.span, { ref, noOfLines: 1, ...props, __css: styles.label });\n});\nTagLabel.displayName = \"TagLabel\";\nconst TagLeftIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginEnd: \"0.5rem\", ...props }));\nTagLeftIcon.displayName = \"TagLeftIcon\";\nconst TagRightIcon = forwardRef((props, ref) => /* @__PURE__ */ jsx(Icon, { ref, verticalAlign: \"top\", marginStart: \"0.5rem\", ...props }));\nTagRightIcon.displayName = \"TagRightIcon\";\nconst TagCloseIcon = (props) => /* @__PURE__ */ jsx(Icon, { verticalAlign: \"inherit\", viewBox: \"0 0 512 512\", ...props, children: /* @__PURE__ */ jsx(\n  \"path\",\n  {\n    fill: \"currentColor\",\n    d: \"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\"\n  }\n) });\nTagCloseIcon.displayName = \"TagCloseIcon\";\nconst TagCloseButton = forwardRef(\n  (props, ref) => {\n    const { isDisabled, children, ...rest } = props;\n    const styles = useTagStyles();\n    const btnStyles = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.closeButton\n    };\n    return /* @__PURE__ */ jsx(\n      chakra.button,\n      {\n        ref,\n        \"aria-label\": \"close\",\n        ...rest,\n        type: \"button\",\n        disabled: isDisabled,\n        __css: btnStyles,\n        children: children || /* @__PURE__ */ jsx(TagCloseIcon, {})\n      }\n    );\n  }\n);\nTagCloseButton.displayName = \"TagCloseButton\";\n\nexport { Tag, TagCloseButton, TagLabel, TagLeftIcon, TagRightIcon, useTagStyles };\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",c=\"month\",f=\"quarter\",h=\"year\",d=\"date\",l=\"Invalid Date\",$=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\"),ordinal:function(t){var e=[\"th\",\"st\",\"nd\",\"rd\"],n=t%100;return\"[\"+t+(e[(n-20)%10]||e[n]||e[0])+\"]\"}},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},v={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,c),s=n-i<0,u=e.clone().add(r+(s?-1:1),c);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:c,y:h,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:f}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},g=\"en\",D={};D[g]=M;var p=\"$isDayjsObject\",S=function(t){return t instanceof _||!(!t||!t[p])},w=function t(e,n,r){var i;if(!e)return g;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(g=i),i||!r&&g},O=function(t,e){if(S(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},b=v;b.l=w,b.i=S,b.w=function(t,e){return O(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=w(t.locale,null,!0),this.parse(t),this.$x=this.$x||t.x||{},this[p]=!0}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(b.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match($);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return b},m.isValid=function(){return!(this.$d.toString()===l)},m.isSame=function(t,e){var n=O(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return O(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<O(t)},m.$g=function(t,e,n){return b.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!b.u(e)||e,f=b.p(t),l=function(t,e){var i=b.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},$=function(t,e){return b.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,v=\"set\"+(this.$u?\"UTC\":\"\");switch(f){case h:return r?l(1,0):l(31,11);case c:return r?l(1,M):l(0,M+1);case o:var g=this.$locale().weekStart||0,D=(y<g?y+7:y)-g;return l(r?m-D:m+(6-D),M);case a:case d:return $(v+\"Hours\",0);case u:return $(v+\"Minutes\",1);case s:return $(v+\"Seconds\",2);case i:return $(v+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=b.p(t),f=\"set\"+(this.$u?\"UTC\":\"\"),l=(n={},n[a]=f+\"Date\",n[d]=f+\"Date\",n[c]=f+\"Month\",n[h]=f+\"FullYear\",n[u]=f+\"Hours\",n[s]=f+\"Minutes\",n[i]=f+\"Seconds\",n[r]=f+\"Milliseconds\",n)[o],$=o===a?this.$D+(e-this.$W):e;if(o===c||o===h){var y=this.clone().set(d,1);y.$d[l]($),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else l&&this.$d[l]($);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[b.p(t)]()},m.add=function(r,f){var d,l=this;r=Number(r);var $=b.p(f),y=function(t){var e=O(l);return b.w(e.date(e.date()+Math.round(t*r)),l)};if($===c)return this.set(c,this.$M+r);if($===h)return this.set(h,this.$y+r);if($===a)return y(1);if($===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[$]||1,m=this.$d.getTime()+r*M;return b.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||l;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=b.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,c=n.months,f=n.meridiem,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},d=function(t){return b.s(s%12||12,t,\"0\")},$=f||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r};return r.replace(y,(function(t,r){return r||function(t){switch(t){case\"YY\":return String(e.$y).slice(-2);case\"YYYY\":return b.s(e.$y,4,\"0\");case\"M\":return a+1;case\"MM\":return b.s(a+1,2,\"0\");case\"MMM\":return h(n.monthsShort,a,c,3);case\"MMMM\":return h(c,a);case\"D\":return e.$D;case\"DD\":return b.s(e.$D,2,\"0\");case\"d\":return String(e.$W);case\"dd\":return h(n.weekdaysMin,e.$W,o,2);case\"ddd\":return h(n.weekdaysShort,e.$W,o,3);case\"dddd\":return o[e.$W];case\"H\":return String(s);case\"HH\":return b.s(s,2,\"0\");case\"h\":return d(1);case\"hh\":return d(2);case\"a\":return $(s,u,!0);case\"A\":return $(s,u,!1);case\"m\":return String(u);case\"mm\":return b.s(u,2,\"0\");case\"s\":return String(e.$s);case\"ss\":return b.s(e.$s,2,\"0\");case\"SSS\":return b.s(e.$ms,3,\"0\");case\"Z\":return i}return null}(t)||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,l){var $,y=this,M=b.p(d),m=O(r),v=(m.utcOffset()-this.utcOffset())*e,g=this-m,D=function(){return b.m(y,m)};switch(M){case h:$=D()/12;break;case c:$=D();break;case f:$=D()/3;break;case o:$=(g-v)/6048e5;break;case a:$=(g-v)/864e5;break;case u:$=g/n;break;case s:$=g/e;break;case i:$=g/t;break;default:$=g}return l?$:b.a($)},m.daysInMonth=function(){return this.endOf(c).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=w(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return b.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),k=_.prototype;return O.prototype=k,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",c],[\"$y\",h],[\"$D\",d]].forEach((function(t){k[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),O.extend=function(t,e){return t.$i||(t(e,_,O),t.$i=!0),O},O.locale=w,O.isDayjs=S,O.unix=function(t){return O(1e3*t)},O.en=D[g],O.Ls=D,O.p={},O}));","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Input,\n  Select,\n  useToast,\n  Spinner,\n  Alert,\n  AlertIcon,\n  Flex,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Badge,\n  Icon,\n  useColorModeValue,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  Textarea,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n  Switch,\n  Avatar,\n  Tooltip,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  IconButton,\n  Progress,\n  Divider,\n  Image,\n  Grid,\n  GridItem,\n  Checkbox,\n  CheckboxGroup,\n  Tag,\n  TagLabel,\n  TagCloseButton,\n  Wrap,\n  WrapItem,\n  useColorMode,\n} from '@chakra-ui/react';\nimport {\n  FaUserTie,\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaCheck,\n  FaTimes,\n  FaStar,\n  FaClock,\n  FaFileAlt,\n  FaPhone,\n  FaEnvelope,\n  FaGlobe,\n  FaMapMarkerAlt,\n  FaEllipsisV,\n  FaEye,\n  FaDownload,\n  FaUpload,\n  FaShieldAlt,\n  FaCheckCircle,\n  FaExclamationTriangle,\n  FaUserCheck,\n  FaUserTimes,\n  FaChartLine,\n  FaMoneyBillWave,\n  FaImage,\n  FaVideo,\n  FaMusic,\n  FaFile,\n  FaCamera,\n  FaMicrophone,\n  FaPaperclip,\n  FaFolder,\n  FaUsers,\n  FaCog,\n  FaSearch,\n  FaPlay,\n} from 'react-icons/fa';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { apiService } from '../services/api';\nimport dayjs from 'dayjs';\n\ninterface Provider {\n  id: number;\n  name: string;\n  email: string;\n  phone: string;\n  website: string;\n  address: string;\n  status: 'active' | 'inactive' | 'pending' | 'suspended';\n  rating: number;\n  totalAportes: number;\n  totalPedidos: number;\n  completedOrders: number;\n  pendingOrders: number;\n  averageResponseTime: number;\n  specializations: string[];\n  description: string;\n  createdAt: string;\n  updatedAt: string;\n  lastActivity: string;\n  paymentInfo: {\n    method: string;\n    account: string;\n    verified: boolean;\n  };\n  grupos?: Array<{\n    id: number;\n    nombre: string;\n    descripcion?: string;\n  }>;\n  media?: Array<{\n    id: string;\n    type: 'image' | 'video' | 'audio' | 'document';\n    url: string;\n    filename: string;\n    size: number;\n    uploadedAt: string;\n  }>;\n}\n\ninterface ProviderFormData {\n  name: string;\n  email: string;\n  phone: string;\n  website: string;\n  address: string;\n  description: string;\n  specializations: string[];\n  paymentInfo: {\n    method: string;\n    account: string;\n  };\n  grupos: number[];\n  media: File[];\n}\n\ninterface Group {\n  id: number;\n  nombre: string;\n  descripcion?: string;\n  es_proveedor: boolean;\n  autorizado: boolean;\n}\n\n// Tipos para contenido capturado\ninterface CapturedContent {\n  id: number;\n  grupo_id: number;\n  usuario_id: number;\n  tipo_contenido: 'texto' | 'imagen' | 'video' | 'audio' | 'documento';\n  contenido: string;\n  metadata: string;\n  fecha_captura: string;\n  estado: string;\n  grupo?: { nombre: string };\n  usuario?: { username: string };\n}\n\nconst CONTENT_TYPES = [\n  { value: 'texto', label: 'Texto' },\n  { value: 'imagen', label: 'Imagen' },\n  { value: 'video', label: 'Video' },\n  { value: 'audio', label: 'Audio' },\n  { value: 'documento', label: 'Documento' },\n];\n\nconst CONTENT_STATES = [\n  { value: '', label: 'Todos' },\n  { value: 'pendiente', label: 'Pendiente' },\n  { value: 'aprobado', label: 'Aprobado' },\n  { value: 'rechazado', label: 'Rechazado' },\n];\n\n// CSS personalizado para animaciones\nconst pulseAnimation = {\n  animation: 'pulse 2s infinite'\n};\n\nexport const Proveedores: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [selectedProvider, setSelectedProvider] = useState<Provider | null>(null);\n  const [formData, setFormData] = useState<ProviderFormData>({\n    name: '',\n    email: '',\n    phone: '',\n    website: '',\n    address: '',\n    description: '',\n    specializations: [],\n    paymentInfo: {\n      method: 'paypal',\n      account: '',\n    },\n    grupos: [],\n    media: [],\n  });\n\n  const [specializationInput, setSpecializationInput] = useState('');\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // Estado para monitoreo/captura\n  const [selectedGroupId, setSelectedGroupId] = useState<number | null>(null);\n  const [selectedContentTypes, setSelectedContentTypes] = useState<string[]>(['texto', 'imagen', 'video', 'audio', 'documento']);\n  const [monitoring, setMonitoring] = useState(false);\n  const [capturedContent, setCapturedContent] = useState<CapturedContent[]>([]);\n  const [loadingCapture, setLoadingCapture] = useState(false);\n  const [filterContentType, setFilterContentType] = useState<string>('');\n  const [filterState, setFilterState] = useState<string>('');\n  const [filterDateFrom, setFilterDateFrom] = useState<string>('');\n  const [filterDateTo, setFilterDateTo] = useState<string>('');\n  const [selectedCaptured, setSelectedCaptured] = useState<CapturedContent | null>(null);\n  const { isOpen: isCapturedModalOpen, onOpen: onCapturedModalOpen, onClose: onCapturedModalClose } = useDisclosure();\n  \n  // Estado para notificaciones de nuevos contenidos\n  const [lastContentCount, setLastContentCount] = useState(0);\n  const [showNewContentAlert, setShowNewContentAlert] = useState(false);\n  const [pollingInterval, setPollingInterval] = useState<number | null>(null);\n\n  const { isOpen: isCreateOpen, onOpen: onCreateOpen, onClose: onCreateClose } = useDisclosure();\n  const { isOpen: isEditOpen, onOpen: onEditOpen, onClose: onEditClose } = useDisclosure();\n  const { isOpen: isViewOpen, onOpen: onViewOpen, onClose: onViewClose } = useDisclosure();\n  const { isOpen: isMediaOpen, onOpen: onMediaOpen, onClose: onMediaClose } = useDisclosure();\n\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const { colorMode } = useColorMode();\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // Queries\n  const { data: providers, isLoading } = useQuery('providers', apiService.getProviders);\n  const { data: providerStats } = useQuery('providerStats', apiService.getProviderStats);\n  const { data: groups } = useQuery('groups', () => apiService.getGroups(1, 100));\n\n  // Mutations\n  const createProviderMutation = useMutation(\n    (data: ProviderFormData) => apiService.createProvider(data),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('providers');\n        queryClient.invalidateQueries('providerStats');\n        onCreateClose();\n        resetForm();\n        toast({\n          title: 'Proveedor creado exitosamente',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al crear el proveedor',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const updateProviderMutation = useMutation(\n    ({ id, data }: { id: number; data: Partial<ProviderFormData> }) => apiService.updateProvider(id, data),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('providers');\n        queryClient.invalidateQueries('providerStats');\n        onEditClose();\n        toast({\n          title: 'Proveedor actualizado exitosamente',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al actualizar el proveedor',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const deleteProviderMutation = useMutation(\n    (id: number) => apiService.deleteProvider(id),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('providers');\n        queryClient.invalidateQueries('providerStats');\n        toast({\n          title: 'Proveedor eliminado exitosamente',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al eliminar el proveedor',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const toggleProviderStatusMutation = useMutation(\n    ({ id, status }: { id: number; status: string }) => apiService.toggleProviderStatus(id, status),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('providers');\n        queryClient.invalidateQueries('providerStats');\n        toast({\n          title: 'Estado del proveedor actualizado',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al actualizar el estado',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  // Función para verificar nuevos contenidos\n  const checkForNewContent = async () => {\n    if (!selectedGroupId && !selectedProvider) return;\n    \n    try {\n      const res = await apiService.getCapturedContent({\n        grupo_id: selectedGroupId || undefined,\n        tipo_contenido: filterContentType || undefined,\n        estado: filterState || undefined,\n        page: 1,\n        limit: 20\n      });\n      \n      let data = res.data || [];\n      // Filtrado adicional por fecha en frontend\n      if (filterDateFrom) {\n        data = data.filter((item: any) => dayjs(item.fecha_captura).isAfter(dayjs(filterDateFrom).subtract(1, 'day')));\n      }\n      if (filterDateTo) {\n        data = data.filter((item: any) => dayjs(item.fecha_captura).isBefore(dayjs(filterDateTo).add(1, 'day')));\n      }\n      \n      // Verificar si hay nuevos contenidos\n      if (data.length > lastContentCount && lastContentCount > 0) {\n        const newCount = data.length - lastContentCount;\n        setShowNewContentAlert(true);\n        toast({\n          title: `¡Nuevo contenido capturado!`,\n          description: `Se han detectado ${newCount} nuevo(s) contenido(s)`,\n          status: 'info',\n          duration: 5000,\n          isClosable: true,\n        });\n      }\n      \n      setCapturedContent(data);\n      setLastContentCount(data.length);\n    } catch (error) {\n      console.error('Error verificando nuevos contenidos:', error);\n    }\n  };\n\n  // Cargar contenido capturado cuando cambia el grupo seleccionado\n  useEffect(() => {\n    if (selectedGroupId || selectedProvider) {\n      setLoadingCapture(true);\n      apiService.getCapturedContent({\n        grupo_id: selectedGroupId || undefined,\n        tipo_contenido: filterContentType || undefined,\n        estado: filterState || undefined,\n        page: 1,\n        limit: 20\n      }).then(res => {\n        let data = res.data || [];\n        // Filtrado adicional por fecha en frontend\n        if (filterDateFrom) {\n          data = data.filter((item: any) => dayjs(item.fecha_captura).isAfter(dayjs(filterDateFrom).subtract(1, 'day')));\n        }\n        if (filterDateTo) {\n          data = data.filter((item: any) => dayjs(item.fecha_captura).isBefore(dayjs(filterDateTo).add(1, 'day')));\n        }\n        setCapturedContent(data);\n        setLastContentCount(data.length);\n      }).finally(() => setLoadingCapture(false));\n    } else {\n      setCapturedContent([]);\n      setLastContentCount(0);\n    }\n  }, [selectedGroupId, selectedProvider, monitoring, filterContentType, filterState, filterDateFrom, filterDateTo]);\n\n  // Sistema de polling para detectar nuevos contenidos\n  useEffect(() => {\n    if (monitoring && (selectedGroupId || selectedProvider)) {\n      // Iniciar polling cada 15 segundos\n      const interval = setInterval(() => {\n        checkForNewContent();\n      }, 15000);\n      \n      setPollingInterval(interval);\n      \n      return () => {\n        if (interval) {\n          clearInterval(interval);\n          setPollingInterval(null);\n        }\n      };\n    } else {\n      // Detener polling si no hay monitoreo activo\n      if (pollingInterval) {\n        clearInterval(pollingInterval);\n        setPollingInterval(null);\n      }\n    }\n  }, [monitoring, selectedGroupId, selectedProvider]);\n\n  // Limpiar polling al desmontar el componente\n  useEffect(() => {\n    return () => {\n      if (pollingInterval) {\n        clearInterval(pollingInterval);\n      }\n    };\n  }, []);\n\n  // Iniciar monitoreo\n  const handleStartMonitoring = async () => {\n    if (!selectedGroupId) return;\n    setLoadingCapture(true);\n    try {\n      await apiService.startGroupMonitoring(selectedGroupId, selectedContentTypes);\n      setMonitoring(true);\n      toast({ title: 'Monitoreo iniciado', status: 'success' });\n    } catch (e: any) {\n      toast({ title: 'Error iniciando monitoreo', description: e?.response?.data?.message || e.message, status: 'error' });\n    } finally {\n      setLoadingCapture(false);\n    }\n  };\n\n  // Detener monitoreo\n  const handleStopMonitoring = async () => {\n    if (!selectedGroupId) return;\n    setLoadingCapture(true);\n    try {\n      await apiService.stopGroupMonitoring(selectedGroupId);\n      setMonitoring(false);\n      toast({ title: 'Monitoreo detenido', status: 'info' });\n    } catch (e: any) {\n      toast({ title: 'Error deteniendo monitoreo', description: e?.response?.data?.message || e.message, status: 'error' });\n    } finally {\n      setLoadingCapture(false);\n    }\n  };\n\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      phone: '',\n      website: '',\n      address: '',\n      description: '',\n      specializations: [],\n      paymentInfo: {\n        method: 'paypal',\n        account: '',\n      },\n      grupos: [],\n      media: [],\n    });\n    setSpecializationInput('');\n    setUploadProgress(0);\n  };\n\n  const handleCreateProvider = () => {\n    createProviderMutation.mutate(formData);\n  };\n\n  const handleUpdateProvider = () => {\n    if (selectedProvider) {\n      updateProviderMutation.mutate({\n        id: selectedProvider.id,\n        data: formData,\n      });\n    }\n  };\n\n  const handleDeleteProvider = (id: number) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este proveedor?')) {\n      deleteProviderMutation.mutate(id);\n    }\n  };\n\n  const handleEditProvider = (provider: Provider) => {\n    setSelectedProvider(provider);\n    setFormData({\n      name: provider.name,\n      email: provider.email,\n      phone: provider.phone,\n      website: provider.website,\n      address: provider.address,\n      description: provider.description,\n      specializations: provider.specializations || [],\n      paymentInfo: provider.paymentInfo,\n      grupos: provider.grupos?.map(g => g.id) || [],\n      media: [],\n    });\n    onEditOpen();\n  };\n\n  const handleViewProvider = (provider: Provider) => {\n    setSelectedProvider(provider);\n    onViewOpen();\n  };\n\n  const handleAddSpecialization = () => {\n    if (specializationInput.trim() && !formData.specializations.includes(specializationInput.trim())) {\n      setFormData({\n        ...formData,\n        specializations: [...formData.specializations, specializationInput.trim()],\n      });\n      setSpecializationInput('');\n    }\n  };\n\n  const handleRemoveSpecialization = (spec: string) => {\n    setFormData({\n      ...formData,\n      specializations: formData.specializations.filter(s => s !== spec),\n    });\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(event.target.files || []);\n    setFormData({\n      ...formData,\n      media: [...formData.media, ...files],\n    });\n  };\n\n  const handleRemoveMedia = (index: number) => {\n    setFormData({\n      ...formData,\n      media: formData.media.filter((_, i) => i !== index),\n    });\n  };\n\n  const getFileIcon = (file: File) => {\n    if (file.type.startsWith('image/')) return FaImage;\n    if (file.type.startsWith('video/')) return FaVideo;\n    if (file.type.startsWith('audio/')) return FaMusic;\n    return FaFile;\n  };\n\n  const getFileType = (file: File) => {\n    if (file.type.startsWith('image/')) return 'Imagen';\n    if (file.type.startsWith('video/')) return 'Video';\n    if (file.type.startsWith('audio/')) return 'Audio';\n    return 'Documento';\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const filteredProviders = providers?.filter(provider => {\n    const matchesSearch = provider.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         provider.email.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'all' || provider.status === statusFilter;\n    return matchesSearch && matchesStatus;\n  }) || [];\n\n  const handleDeleteCaptured = async (id: number) => {\n    if (!window.confirm('¿Seguro que deseas eliminar este contenido?')) return;\n    setLoadingCapture(true);\n    try {\n      await apiService.deleteCapturedContent(id);\n      setCapturedContent(prev => prev.filter(item => item.id !== id));\n      toast({ title: 'Contenido eliminado', status: 'success' });\n    } catch (e: any) {\n      toast({ title: 'Error eliminando contenido', description: e?.response?.data?.message || e.message, status: 'error' });\n    } finally {\n      setLoadingCapture(false);\n    }\n  };\n\n  const handleApproveCaptured = async (id: number) => {\n    setLoadingCapture(true);\n    try {\n      // Suponiendo que hay un endpoint para actualizar estado (puedes ajustar la ruta si es diferente)\n      // Por ahora solo actualizamos el estado local ya que no existe el endpoint\n      setCapturedContent(prev => prev.map(item => item.id === id ? { ...item, estado: 'aprobado' } : item));\n      toast({ title: 'Marcado como revisado', status: 'success' });\n    } catch (e: any) {\n      toast({ title: 'Error al marcar como revisado', description: e?.response?.data?.message || e.message, status: 'error' });\n    } finally {\n      setLoadingCapture(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Box textAlign=\"center\" py={10}>\n        <Spinner size=\"xl\" />\n        <Text mt={4}>Cargando proveedores...</Text>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <VStack spacing={6} align=\"stretch\">\n        {/* Header */}\n        <Flex align=\"center\" justify=\"space-between\">\n          <Box>\n            <Heading size=\"lg\">Gestión de Proveedores</Heading>\n            <Text color=\"gray.600\" mt={1}>\n              Administra proveedores, grupos y contenido multimedia\n            </Text>\n          </Box>\n          <Button\n            leftIcon={<FaPlus />}\n            colorScheme=\"blue\"\n            onClick={onCreateOpen}\n          >\n            Nuevo Proveedor\n          </Button>\n        </Flex>\n\n        {/* Estadísticas */}\n        {providerStats && (\n          <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={6}>\n            <Stat>\n              <StatLabel>Total Proveedores</StatLabel>\n              <StatNumber>{providerStats.totalProviders || 0}</StatNumber>\n              <StatHelpText>\n                <Icon as={FaUserTie} mr={1} />\n                Proveedores registrados\n              </StatHelpText>\n            </Stat>\n            <Stat>\n              <StatLabel>Activos</StatLabel>\n              <StatNumber>{providerStats.activeProviders || 0}</StatNumber>\n              <StatHelpText>\n                <Icon as={FaCheckCircle} mr={1} />\n                Proveedores activos\n              </StatHelpText>\n            </Stat>\n            <Stat>\n              <StatLabel>Total Aportes</StatLabel>\n              <StatNumber>{providerStats.totalAportes || 0}</StatNumber>\n              <StatHelpText>\n                <Icon as={FaStar} mr={1} />\n                Aportes realizados\n              </StatHelpText>\n            </Stat>\n            <Stat>\n              <StatLabel>Total Pedidos</StatLabel>\n              <StatNumber>{providerStats.totalPedidos || 0}</StatNumber>\n              <StatHelpText>\n                <Icon as={FaFileAlt} mr={1} />\n                Pedidos atendidos\n              </StatHelpText>\n            </Stat>\n          </SimpleGrid>\n        )}\n\n        {/* Filtros */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <HStack spacing={4}>\n              <FormControl maxW=\"300px\">\n                <Input\n                  placeholder=\"Buscar proveedores...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </FormControl>\n              <FormControl maxW=\"200px\">\n                <Select\n                  value={statusFilter}\n                  onChange={(e) => setStatusFilter(e.target.value)}\n                >\n                  <option value=\"all\">Todos los estados</option>\n                  <option value=\"active\">Activo</option>\n                  <option value=\"inactive\">Inactivo</option>\n                  <option value=\"pending\">Pendiente</option>\n                  <option value=\"suspended\">Suspendido</option>\n                </Select>\n              </FormControl>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Lista de Proveedores */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardHeader>\n            <Heading size=\"md\">Proveedores</Heading>\n          </CardHeader>\n          <CardBody>\n            {filteredProviders.length === 0 ? (\n              <Alert status=\"info\">\n                <AlertIcon />\n                No se encontraron proveedores\n              </Alert>\n            ) : (\n              <Table variant=\"simple\">\n                <Thead>\n                  <Tr>\n                    <Th>Proveedor</Th>\n                    <Th>Contacto</Th>\n                    <Th>Grupos</Th>\n                    <Th>Estado</Th>\n                    <Th>Rating</Th>\n                    <Th>Acciones</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {filteredProviders.map((provider) => (\n                    <Tr key={provider.id}>\n                      <Td>\n                        <HStack>\n                          <Avatar size=\"sm\" name={provider.name} />\n                          <Box>\n                            <Text fontWeight=\"bold\">{provider.name}</Text>\n                            <Text fontSize=\"sm\" color=\"gray.500\">\n                              {provider.specializations?.join(', ') || 'Sin especializaciones'}\n                            </Text>\n                          </Box>\n                        </HStack>\n                      </Td>\n                      <Td>\n                        <VStack align=\"start\" spacing={1}>\n                          <Text fontSize=\"sm\">\n                            <Icon as={FaEnvelope} mr={2} />\n                            {provider.email}\n                          </Text>\n                          <Text fontSize=\"sm\">\n                            <Icon as={FaPhone} mr={2} />\n                            {provider.phone}\n                          </Text>\n                        </VStack>\n                      </Td>\n                      <Td>\n                        <Wrap>\n                          {provider.grupos?.slice(0, 2).map((grupo) => (\n                            <WrapItem key={grupo.id}>\n                              <Tag size=\"sm\" colorScheme=\"blue\">\n                                <TagLabel>{grupo.nombre}</TagLabel>\n                              </Tag>\n                            </WrapItem>\n                          ))}\n                          {provider.grupos && provider.grupos.length > 2 && (\n                            <WrapItem>\n                              <Tag size=\"sm\" colorScheme=\"gray\">\n                                <TagLabel>+{provider.grupos.length - 2}</TagLabel>\n                              </Tag>\n                            </WrapItem>\n                          )}\n                        </Wrap>\n                      </Td>\n                      <Td>\n                        <Badge\n                          colorScheme={\n                            provider.status === 'active' ? 'green' :\n                            provider.status === 'inactive' ? 'red' :\n                            provider.status === 'pending' ? 'yellow' : 'gray'\n                          }\n                        >\n                          {provider.status === 'active' ? 'Activo' :\n                           provider.status === 'inactive' ? 'Inactivo' :\n                           provider.status === 'pending' ? 'Pendiente' : 'Suspendido'}\n                        </Badge>\n                      </Td>\n                      <Td>\n                        <HStack>\n                          <Icon as={FaStar} color=\"yellow.400\" />\n                          <Text>{provider.rating || 0}/5</Text>\n                        </HStack>\n                      </Td>\n                      <Td>\n                        <HStack spacing={2}>\n                          <IconButton\n                            aria-label=\"Ver proveedor\"\n                            icon={<FaEye />}\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => handleViewProvider(provider)}\n                          />\n                          <IconButton\n                            aria-label=\"Editar proveedor\"\n                            icon={<FaEdit />}\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => handleEditProvider(provider)}\n                          />\n                          <IconButton\n                            aria-label=\"Ver media\"\n                            icon={<FaImage />}\n                            size=\"sm\"\n                            variant=\"ghost\"\n                            onClick={() => {\n                              setSelectedProvider(provider);\n                              onMediaOpen();\n                            }}\n                          />\n                          <Menu>\n                            <MenuButton\n                              as={IconButton}\n                              aria-label=\"Más opciones\"\n                              icon={<FaEllipsisV />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                            />\n                            <MenuList>\n                              <MenuItem\n                                icon={<FaTrash />}\n                                onClick={() => handleDeleteProvider(provider.id)}\n                              >\n                                Eliminar\n                              </MenuItem>\n                            </MenuList>\n                          </Menu>\n                        </HStack>\n                      </Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </Table>\n            )}\n          </CardBody>\n        </Card>\n\n        {/* Panel de captura silenciosa del bot */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor} mb={6}>\n          <CardHeader>\n            <Heading size=\"md\">Captura Silenciosa de Grupo (Bot)</Heading>\n          </CardHeader>\n          <CardBody>\n            <VStack align=\"start\" spacing={4}>\n              {/* Filtros de contenido capturado */}\n              <HStack spacing={4} w=\"full\">\n                <FormControl maxW=\"200px\">\n                  <FormLabel>Tipo de contenido</FormLabel>\n                  <Select value={filterContentType} onChange={e => setFilterContentType(e.target.value)}>\n                    <option value=\"\">Todos</option>\n                    {CONTENT_TYPES.map(type => (\n                      <option key={type.value} value={type.value}>{type.label}</option>\n                    ))}\n                  </Select>\n                </FormControl>\n                <FormControl maxW=\"200px\">\n                  <FormLabel>Estado</FormLabel>\n                  <Select value={filterState} onChange={e => setFilterState(e.target.value)}>\n                    {CONTENT_STATES.map(state => (\n                      <option key={state.value} value={state.value}>{state.label}</option>\n                    ))}\n                  </Select>\n                </FormControl>\n                <FormControl maxW=\"180px\">\n                  <FormLabel>Desde</FormLabel>\n                  <Input type=\"date\" value={filterDateFrom} onChange={e => setFilterDateFrom(e.target.value)} />\n                </FormControl>\n                <FormControl maxW=\"180px\">\n                  <FormLabel>Hasta</FormLabel>\n                  <Input type=\"date\" value={filterDateTo} onChange={e => setFilterDateTo(e.target.value)} />\n                </FormControl>\n              </HStack>\n              <FormControl maxW=\"300px\">\n                <FormLabel>Selecciona un grupo</FormLabel>\n                <Select\n                  placeholder=\"Seleccionar grupo\"\n                  value={selectedGroupId || ''}\n                  onChange={e => setSelectedGroupId(Number(e.target.value) || null)}\n                >\n                  {groups?.data?.map((grupo: Group) => (\n                    <option key={grupo.id} value={grupo.id}>{grupo.nombre}</option>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControl>\n                <FormLabel>Tipos de contenido a capturar</FormLabel>\n                <CheckboxGroup\n                  value={selectedContentTypes}\n                  onChange={val => setSelectedContentTypes(val as string[])}\n                >\n                  <HStack>\n                    {CONTENT_TYPES.map(type => (\n                      <Checkbox key={type.value} value={type.value}>{type.label}</Checkbox>\n                    ))}\n                  </HStack>\n                </CheckboxGroup>\n              </FormControl>\n              <HStack>\n                <Button\n                  colorScheme=\"green\"\n                  onClick={handleStartMonitoring}\n                  isLoading={loadingCapture}\n                  isDisabled={!selectedGroupId || monitoring}\n                  leftIcon={monitoring ? <FaCheckCircle /> : <FaPlay />}\n                >\n                  {monitoring ? 'Captura Activa' : 'Iniciar Captura'}\n                </Button>\n                <Button\n                  colorScheme=\"red\"\n                  onClick={handleStopMonitoring}\n                  isLoading={loadingCapture}\n                  isDisabled={!selectedGroupId || !monitoring}\n                >\n                  Detener Captura\n                </Button>\n                \n                {/* Indicador de estado del polling */}\n                {pollingInterval && (\n                  <HStack spacing={2} px={3} py={2} bg=\"blue.50\" borderRadius=\"md\" border=\"1px\" borderColor=\"blue.200\">\n                    <Box w={2} h={2} bg=\"green.400\" borderRadius=\"full\" style={pulseAnimation} />\n                    <Text fontSize=\"sm\" color=\"blue.700\" fontWeight=\"medium\">\n                      Monitoreo activo - Actualizando cada 15s\n                    </Text>\n                  </HStack>\n                )}\n              </HStack>\n              <Divider />\n              <Box w=\"full\">\n                <HStack justify=\"space-between\" align=\"center\" mb={2}>\n                  <Heading size=\"sm\">\n                    Contenidos capturados {selectedProvider ? `del proveedor: ${selectedProvider.name}` : selectedGroupId ? `del grupo seleccionado` : ''}\n                  </Heading>\n                  \n                  {/* Contador de contenidos */}\n                  {capturedContent.length > 0 && (\n                    <HStack spacing={2}>\n                      <Badge colorScheme=\"blue\" variant=\"solid\" px={3} py={1} borderRadius=\"full\">\n                        {capturedContent.length} contenido(s)\n                      </Badge>\n                      {pollingInterval && (\n                        <Badge colorScheme=\"green\" variant=\"outline\" px={2} py={1} borderRadius=\"full\">\n                          <HStack spacing={1}>\n                            <Box w={2} h={2} bg=\"green.400\" borderRadius=\"full\" />\n                            <Text fontSize=\"xs\">En vivo</Text>\n                          </HStack>\n                        </Badge>\n                      )}\n                      <Button\n                        size=\"xs\"\n                        variant=\"ghost\"\n                        leftIcon={<FaSearch />}\n                        onClick={checkForNewContent}\n                        isLoading={loadingCapture}\n                        colorScheme=\"blue\"\n                      >\n                        Actualizar ahora\n                      </Button>\n                    </HStack>\n                  )}\n                </HStack>\n                \n                {/* Alerta de nuevos contenidos */}\n                {showNewContentAlert && (\n                  <Alert \n                    status=\"info\" \n                    variant=\"left-accent\" \n                    mb={4}\n                    borderRadius=\"md\"\n                  >\n                    <AlertIcon />\n                    <Box flex=\"1\">\n                      <Text fontWeight=\"bold\">¡Nuevo contenido detectado!</Text>\n                      <Text fontSize=\"sm\">\n                        Se han capturado nuevos contenidos. La lista se ha actualizado automáticamente.\n                      </Text>\n                    </Box>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => setShowNewContentAlert(false)}\n                      ml={2}\n                    >\n                      <FaTimes />\n                    </Button>\n                  </Alert>\n                )}\n                {loadingCapture ? (\n                  <Spinner />\n                ) : capturedContent.length === 0 ? (\n                  <Text color=\"gray.500\">No hay contenido capturado para este grupo.</Text>\n                ) : (\n                  <SimpleGrid columns={{ base: 1, md: 2, lg: 3 }} spacing={4}>\n                    {capturedContent.map(item => (\n                      <Card\n                        key={item.id}\n                        bg={cardBg}\n                        border=\"1px\"\n                        borderColor={borderColor}\n                        cursor=\"pointer\"\n                        onClick={() => { setSelectedCaptured(item); onCapturedModalOpen(); }}\n                      >\n                        <CardBody>\n                          <Text fontWeight=\"bold\" mb={1}>{item.tipo_contenido.toUpperCase()}</Text>\n                          {item.tipo_contenido === 'imagen' && (\n                            <Image src={item.contenido} alt=\"Imagen capturada\" maxH=\"200px\" objectFit=\"cover\" mb={2} />\n                          )}\n                          {item.tipo_contenido === 'video' && (\n                            <Box mb={2}><video src={item.contenido} controls style={{ maxWidth: '100%' }} /></Box>\n                          )}\n                          {item.tipo_contenido === 'audio' && (\n                            <Box mb={2}><audio src={item.contenido} controls /></Box>\n                          )}\n                          {item.tipo_contenido === 'documento' && (\n                            <Button as=\"a\" href={item.contenido} target=\"_blank\" leftIcon={<FaFile />} size=\"sm\" mb={2}>Ver documento</Button>\n                          )}\n                          {item.tipo_contenido === 'texto' && (\n                            <Text fontSize=\"sm\" color=\"gray.700\" mb={2}>{item.contenido}</Text>\n                          )}\n                          <HStack mt={2} spacing={2}>\n                            {(item.tipo_contenido === 'imagen' || item.tipo_contenido === 'video' || item.tipo_contenido === 'audio' || item.tipo_contenido === 'documento') && (\n                              <Button\n                                size=\"xs\"\n                                leftIcon={<FaDownload />}\n                                as=\"a\"\n                                href={item.contenido}\n                                download\n                                target=\"_blank\"\n                                variant=\"outline\"\n                              >\n                                Descargar\n                              </Button>\n                            )}\n                            <Button\n                              size=\"xs\"\n                              colorScheme=\"red\"\n                              leftIcon={<FaTrash />}\n                              onClick={() => handleDeleteCaptured(item.id)}\n                              variant=\"outline\"\n                            >\n                              Eliminar\n                            </Button>\n                            {item.estado !== 'aprobado' && (\n                              <Button\n                                size=\"xs\"\n                                colorScheme=\"green\"\n                                leftIcon={<FaCheck />}\n                                onClick={() => handleApproveCaptured(item.id)}\n                                variant=\"outline\"\n                              >\n                                Revisado\n                              </Button>\n                            )}\n                          </HStack>\n                          <Text fontSize=\"xs\" color=\"gray.500\">{new Date(item.fecha_captura).toLocaleString()}</Text>\n                          <Text fontSize=\"xs\" color=\"gray.500\">Estado: {item.estado}</Text>\n                        </CardBody>\n                      </Card>\n                    ))}\n                  </SimpleGrid>\n                )}\n              </Box>\n            </VStack>\n          </CardBody>\n        </Card>\n      </VStack>\n\n      {/* Modal Crear Proveedor */}\n      <Modal isOpen={isCreateOpen} onClose={onCreateClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Crear Nuevo Proveedor</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <VStack spacing={4}>\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} w=\"full\">\n                <GridItem>\n                  <FormControl isRequired>\n                    <FormLabel>Nombre</FormLabel>\n                    <Input\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      placeholder=\"Nombre del proveedor\"\n                    />\n                  </FormControl>\n                </GridItem>\n                <GridItem>\n                  <FormControl isRequired>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                      placeholder=\"email@ejemplo.com\"\n                    />\n                  </FormControl>\n                </GridItem>\n                <GridItem>\n                  <FormControl>\n                    <FormLabel>Teléfono</FormLabel>\n                    <Input\n                      value={formData.phone}\n                      onChange={(e) => setFormData({ ...formData, phone: e.target.value })}\n                      placeholder=\"+1234567890\"\n                    />\n                  </FormControl>\n                </GridItem>\n                <GridItem>\n                  <FormControl>\n                    <FormLabel>Sitio Web</FormLabel>\n                    <Input\n                      value={formData.website}\n                      onChange={(e) => setFormData({ ...formData, website: e.target.value })}\n                      placeholder=\"https://ejemplo.com\"\n                    />\n                  </FormControl>\n                </GridItem>\n              </Grid>\n\n              <FormControl>\n                <FormLabel>Dirección</FormLabel>\n                <Input\n                  value={formData.address}\n                  onChange={(e) => setFormData({ ...formData, address: e.target.value })}\n                  placeholder=\"Dirección completa\"\n                />\n              </FormControl>\n\n              <FormControl>\n                <FormLabel>Descripción</FormLabel>\n                <Textarea\n                  value={formData.description}\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                  placeholder=\"Descripción del proveedor\"\n                  rows={3}\n                />\n              </FormControl>\n\n              {/* Especializaciones */}\n              <FormControl>\n                <FormLabel>Especializaciones</FormLabel>\n                <HStack>\n                  <Input\n                    value={specializationInput}\n                    onChange={(e) => setSpecializationInput(e.target.value)}\n                    placeholder=\"Agregar especialización\"\n                    onKeyPress={(e) => e.key === 'Enter' && handleAddSpecialization()}\n                  />\n                  <Button onClick={handleAddSpecialization} size=\"sm\">\n                    Agregar\n                  </Button>\n                </HStack>\n                <Wrap mt={2}>\n                  {formData.specializations.map((spec, index) => (\n                    <WrapItem key={index}>\n                      <Tag size=\"md\" colorScheme=\"blue\">\n                        <TagLabel>{spec}</TagLabel>\n                        <TagCloseButton onClick={() => handleRemoveSpecialization(spec)} />\n                      </Tag>\n                    </WrapItem>\n                  ))}\n                </Wrap>\n              </FormControl>\n\n              {/* Selector de Grupos */}\n              <FormControl>\n                <FormLabel>Grupos Asociados</FormLabel>\n                <Select\n                  placeholder=\"Seleccionar grupos\"\n                  onChange={(e) => {\n                    const grupoId = parseInt(e.target.value);\n                    if (grupoId && !formData.grupos.includes(grupoId)) {\n                      setFormData({\n                        ...formData,\n                        grupos: [...formData.grupos, grupoId],\n                      });\n                    }\n                  }}\n                >\n                  {groups?.data?.map((grupo: Group) => (\n                    <option key={grupo.id} value={grupo.id}>\n                      {grupo.nombre} {grupo.descripcion && `- ${grupo.descripcion}`}\n                    </option>\n                  ))}\n                </Select>\n                <Wrap mt={2}>\n                  {formData.grupos.map((grupoId) => {\n                    const grupo = groups?.data?.find((g: Group) => g.id === grupoId);\n                    return (\n                      <WrapItem key={grupoId}>\n                        <Tag size=\"md\" colorScheme=\"green\">\n                          <TagLabel>{grupo?.nombre}</TagLabel>\n                          <TagCloseButton\n                            onClick={() => setFormData({\n                              ...formData,\n                              grupos: formData.grupos.filter(id => id !== grupoId),\n                            })}\n                          />\n                        </Tag>\n                      </WrapItem>\n                    );\n                  })}\n                </Wrap>\n              </FormControl>\n\n              {/* Captura de Media */}\n              <FormControl>\n                <FormLabel>Contenido Multimedia</FormLabel>\n                <VStack spacing={3} align=\"stretch\">\n                  <HStack>\n                    <Button\n                      leftIcon={<FaUpload />}\n                      onClick={() => fileInputRef.current?.click()}\n                      colorScheme=\"blue\"\n                      variant=\"outline\"\n                    >\n                      Seleccionar Archivos\n                    </Button>\n                    <Text fontSize=\"sm\" color=\"gray.500\">\n                      Imágenes, videos, audio, documentos\n                    </Text>\n                  </HStack>\n                  \n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    accept=\"image/*,video/*,audio/*,.pdf,.doc,.docx,.txt\"\n                    onChange={handleFileUpload}\n                    style={{ display: 'none' }}\n                  />\n\n                  {formData.media.length > 0 && (\n                    <Box>\n                      <Text fontSize=\"sm\" fontWeight=\"bold\" mb={2}>\n                        Archivos seleccionados ({formData.media.length}):\n                      </Text>\n                      <VStack spacing={2} align=\"stretch\">\n                        {formData.media.map((file, index) => (\n                          <HStack\n                            key={index}\n                            p={3}\n                            bg={colorMode === 'light' ? 'gray.50' : 'gray.700'}\n                            borderRadius=\"md\"\n                            justify=\"space-between\"\n                          >\n                            <HStack>\n                              <Icon as={getFileIcon(file)} color=\"blue.500\" />\n                              <Box>\n                                <Text fontSize=\"sm\" fontWeight=\"medium\">\n                                  {file.name}\n                                </Text>\n                                <Text fontSize=\"xs\" color=\"gray.500\">\n                                  {getFileType(file)} • {formatFileSize(file.size)}\n                                </Text>\n                              </Box>\n                            </HStack>\n                            <IconButton\n                              aria-label=\"Eliminar archivo\"\n                              icon={<FaTimes />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              colorScheme=\"red\"\n                              onClick={() => handleRemoveMedia(index)}\n                            />\n                          </HStack>\n                        ))}\n                      </VStack>\n                    </Box>\n                  )}\n                </VStack>\n              </FormControl>\n\n              {/* Información de Pago */}\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} w=\"full\">\n                <GridItem>\n                  <FormControl>\n                    <FormLabel>Método de Pago</FormLabel>\n                    <Select\n                      value={formData.paymentInfo.method}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        paymentInfo: { ...formData.paymentInfo, method: e.target.value },\n                      })}\n                    >\n                      <option value=\"paypal\">PayPal</option>\n                      <option value=\"stripe\">Stripe</option>\n                      <option value=\"bank\">Transferencia Bancaria</option>\n                      <option value=\"crypto\">Criptomonedas</option>\n                    </Select>\n                  </FormControl>\n                </GridItem>\n                <GridItem>\n                  <FormControl>\n                    <FormLabel>Cuenta</FormLabel>\n                    <Input\n                      value={formData.paymentInfo.account}\n                      onChange={(e) => setFormData({\n                        ...formData,\n                        paymentInfo: { ...formData.paymentInfo, account: e.target.value },\n                      })}\n                      placeholder=\"Cuenta o ID de pago\"\n                    />\n                  </FormControl>\n                </GridItem>\n              </Grid>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\" mr={3} onClick={onCreateClose}>\n              Cancelar\n            </Button>\n            <Button\n              colorScheme=\"blue\"\n              onClick={handleCreateProvider}\n              isLoading={createProviderMutation.isLoading}\n            >\n              Crear Proveedor\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      {/* Modal Editar Proveedor */}\n      <Modal isOpen={isEditOpen} onClose={onEditClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Editar Proveedor</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {/* Mismo contenido que el modal de crear, pero con handleUpdateProvider */}\n            <VStack spacing={4}>\n              <Grid templateColumns=\"repeat(2, 1fr)\" gap={4} w=\"full\">\n                <GridItem>\n                  <FormControl isRequired>\n                    <FormLabel>Nombre</FormLabel>\n                    <Input\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      placeholder=\"Nombre del proveedor\"\n                    />\n                  </FormControl>\n                </GridItem>\n                <GridItem>\n                  <FormControl isRequired>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      type=\"email\"\n                      value={formData.email}\n                      onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                      placeholder=\"email@ejemplo.com\"\n                    />\n                  </FormControl>\n                </GridItem>\n              </Grid>\n              {/* Resto de campos similares al modal de crear */}\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\" mr={3} onClick={onEditClose}>\n              Cancelar\n            </Button>\n            <Button\n              colorScheme=\"blue\"\n              onClick={handleUpdateProvider}\n              isLoading={updateProviderMutation.isLoading}\n            >\n              Actualizar Proveedor\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      {/* Modal Ver Proveedor */}\n      <Modal isOpen={isViewOpen} onClose={onViewClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Detalles del Proveedor</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {selectedProvider && (\n              <VStack spacing={4} align=\"stretch\">\n                <HStack>\n                  <Avatar size=\"lg\" name={selectedProvider.name} />\n                  <Box>\n                    <Heading size=\"md\">{selectedProvider.name}</Heading>\n                    <Text color=\"gray.500\">{selectedProvider.email}</Text>\n                  </Box>\n                </HStack>\n                \n                <Divider />\n                \n                <SimpleGrid columns={2} spacing={4}>\n                  <Box>\n                    <Text fontWeight=\"bold\">Contacto</Text>\n                    <Text>📧 {selectedProvider.email}</Text>\n                    <Text>📱 {selectedProvider.phone}</Text>\n                    <Text>🌐 {selectedProvider.website}</Text>\n                    <Text>📍 {selectedProvider.address}</Text>\n                  </Box>\n                  <Box>\n                    <Text fontWeight=\"bold\">Estadísticas</Text>\n                    <Text>⭐ Rating: {selectedProvider.rating}/5</Text>\n                    <Text>📊 Aportes: {selectedProvider.totalAportes}</Text>\n                    <Text>📋 Pedidos: {selectedProvider.totalPedidos}</Text>\n                    <Text>⏱️ Tiempo respuesta: {selectedProvider.averageResponseTime}min</Text>\n                  </Box>\n                </SimpleGrid>\n\n                {selectedProvider.specializations && selectedProvider.specializations.length > 0 && (\n                  <>\n                    <Divider />\n                    <Box>\n                      <Text fontWeight=\"bold\" mb={2}>Especializaciones</Text>\n                      <Wrap>\n                        {selectedProvider.specializations.map((spec, index) => (\n                          <WrapItem key={index}>\n                            <Tag size=\"md\" colorScheme=\"blue\">\n                              <TagLabel>{spec}</TagLabel>\n                            </Tag>\n                          </WrapItem>\n                        ))}\n                      </Wrap>\n                    </Box>\n                  </>\n                )}\n\n                {selectedProvider.grupos && selectedProvider.grupos.length > 0 && (\n                  <>\n                    <Divider />\n                    <Box>\n                      <Text fontWeight=\"bold\" mb={2}>Grupos Asociados</Text>\n                      <Wrap>\n                        {selectedProvider.grupos.map((grupo) => (\n                          <WrapItem key={grupo.id}>\n                            <Tag size=\"md\" colorScheme=\"green\">\n                              <TagLabel>{grupo.nombre}</TagLabel>\n                            </Tag>\n                          </WrapItem>\n                        ))}\n                      </Wrap>\n                    </Box>\n                  </>\n                )}\n              </VStack>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\" mr={3} onClick={onViewClose}>\n              Cerrar\n            </Button>\n            <Button\n              colorScheme=\"blue\"\n              onClick={() => {\n                onViewClose();\n                if (selectedProvider) {\n                  handleEditProvider(selectedProvider);\n                }\n              }}\n            >\n              Editar\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      {/* Modal Ver Media */}\n      <Modal isOpen={isMediaOpen} onClose={onMediaClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Contenido Multimedia del Proveedor</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {selectedProvider && (\n              <VStack spacing={4}>\n                {selectedProvider.media && selectedProvider.media.length > 0 ? (\n                  <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4} w=\"full\">\n                    {selectedProvider.media.map((item) => (\n                      <Card key={item.id} bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardBody>\n                          {item.type === 'image' && (\n                            <Image\n                              src={item.url}\n                              alt={item.filename}\n                              borderRadius=\"md\"\n                              maxH=\"200px\"\n                              objectFit=\"cover\"\n                              mx=\"auto\"\n                            />\n                          )}\n                          {item.type === 'video' && (\n                            <Box\n                              bg=\"gray.100\"\n                              borderRadius=\"md\"\n                              p={4}\n                              textAlign=\"center\"\n                            >\n                              <Icon as={FaVideo} size=\"xl\" color=\"blue.500\" />\n                              <Text mt={2} fontSize=\"sm\">\n                                {item.filename}\n                              </Text>\n                            </Box>\n                          )}\n                          {item.type === 'audio' && (\n                            <Box\n                              bg=\"gray.100\"\n                              borderRadius=\"md\"\n                              p={4}\n                              textAlign=\"center\"\n                            >\n                              <Icon as={FaMusic} size=\"xl\" color=\"purple.500\" />\n                              <Text mt={2} fontSize=\"sm\">\n                                {item.filename}\n                              </Text>\n                            </Box>\n                          )}\n                          {item.type === 'document' && (\n                            <Box\n                              bg=\"gray.100\"\n                              borderRadius=\"md\"\n                              p={4}\n                              textAlign=\"center\"\n                            >\n                              <Icon as={FaFile} size=\"xl\" color=\"green.500\" />\n                              <Text mt={2} fontSize=\"sm\">\n                                {item.filename}\n                              </Text>\n                            </Box>\n                          )}\n                          <VStack mt={3} spacing={2}>\n                            <Text fontSize=\"sm\" fontWeight=\"bold\">\n                              {item.filename}\n                            </Text>\n                            <Text fontSize=\"xs\" color=\"gray.500\">\n                              {formatFileSize(item.size)} • {new Date(item.uploadedAt).toLocaleDateString()}\n                            </Text>\n                            <Button\n                              leftIcon={<FaDownload />}\n                              size=\"sm\"\n                              variant=\"outline\"\n                              colorScheme=\"blue\"\n                              onClick={() => window.open(item.url, '_blank')}\n                            >\n                              Descargar\n                            </Button>\n                          </VStack>\n                        </CardBody>\n                      </Card>\n                    ))}\n                  </SimpleGrid>\n                ) : (\n                  <Alert status=\"info\">\n                    <AlertIcon />\n                    Este proveedor no tiene contenido multimedia\n                  </Alert>\n                )}\n              </VStack>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\" mr={3} onClick={onMediaClose}>\n              Cerrar\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      {/* Modal de detalle de contenido capturado */}\n      <Modal isOpen={isCapturedModalOpen} onClose={onCapturedModalClose} size=\"lg\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Detalle de Contenido Capturado</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {selectedCaptured && (\n              <VStack align=\"start\" spacing={4}>\n                <Text fontWeight=\"bold\">Tipo: {selectedCaptured.tipo_contenido.toUpperCase()}</Text>\n                {selectedCaptured.tipo_contenido === 'imagen' && (\n                  <Image src={selectedCaptured.contenido} alt=\"Imagen capturada\" maxH=\"300px\" objectFit=\"contain\" />\n                )}\n                {selectedCaptured.tipo_contenido === 'video' && (\n                  <Box><video src={selectedCaptured.contenido} controls style={{ maxWidth: '100%' }} /></Box>\n                )}\n                {selectedCaptured.tipo_contenido === 'audio' && (\n                  <Box><audio src={selectedCaptured.contenido} controls /></Box>\n                )}\n                {selectedCaptured.tipo_contenido === 'documento' && (\n                  <Button as=\"a\" href={selectedCaptured.contenido} target=\"_blank\" leftIcon={<FaFile />} size=\"sm\">Ver documento</Button>\n                )}\n                {selectedCaptured.tipo_contenido === 'texto' && (\n                  <Text fontSize=\"md\" color=\"gray.700\">{selectedCaptured.contenido}</Text>\n                )}\n                <Divider />\n                <Text fontSize=\"sm\">Estado: {selectedCaptured.estado}</Text>\n                <Text fontSize=\"sm\">Fecha: {new Date(selectedCaptured.fecha_captura).toLocaleString()}</Text>\n                <Text fontSize=\"sm\">Grupo: {selectedCaptured.grupo?.nombre || selectedGroupId}</Text>\n                <Text fontSize=\"sm\">Usuario: {selectedCaptured.usuario?.username || '-'}</Text>\n                <Text fontSize=\"sm\">ID: {selectedCaptured.id}</Text>\n                <Text fontSize=\"sm\">Metadatos: {selectedCaptured.metadata}</Text>\n                <HStack mt={2} spacing={2}>\n                  {(selectedCaptured.tipo_contenido === 'imagen' || selectedCaptured.tipo_contenido === 'video' || selectedCaptured.tipo_contenido === 'audio' || selectedCaptured.tipo_contenido === 'documento') && (\n                    <Button\n                      size=\"sm\"\n                      leftIcon={<FaDownload />}\n                      as=\"a\"\n                      href={selectedCaptured.contenido}\n                      download\n                      target=\"_blank\"\n                      variant=\"outline\"\n                    >\n                      Descargar\n                    </Button>\n                  )}\n                  <Button\n                    size=\"sm\"\n                    colorScheme=\"red\"\n                    leftIcon={<FaTrash />}\n                    onClick={() => { handleDeleteCaptured(selectedCaptured.id); onCapturedModalClose(); }}\n                    variant=\"outline\"\n                  >\n                    Eliminar\n                  </Button>\n                  {selectedCaptured.estado !== 'aprobado' && (\n                    <Button\n                      size=\"sm\"\n                      colorScheme=\"green\"\n                      leftIcon={<FaCheck />}\n                      onClick={() => { handleApproveCaptured(selectedCaptured.id); onCapturedModalClose(); }}\n                      variant=\"outline\"\n                    >\n                      Revisado\n                    </Button>\n                  )}\n                </HStack>\n              </VStack>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onCapturedModalClose}>Cerrar</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Proveedores;\n\n\n\n"],"names":["CheckboxGroupProvider","useCheckboxGroupContext","createContext","CheckIcon","props","jsx","chakra","IndeterminateIcon","CheckboxIcon","isIndeterminate","isChecked","rest","BaseIcon","useInitialAnimationState","previousIsChecked","setPreviousIsChecked","useState","shouldAnimate","setShouldAnimate","controlStyles","rootStyles","checkAnim","keyframes","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","ref","group","mergedProps","styles","useMultiStyleConfig","ownProps","omitThemingProps","spacing","className","children","iconColor","iconSize","icon","isCheckedProp","isDisabled","onChangeProp","inputProps","onChange","callAll","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","useCheckbox","iconStyles","useMemo","compact","clonedIcon","cloneElement","jsxs","cx","isInputEvent","value","isObject","useCheckboxGroup","defaultValue","valueProp","isNative","useCallbackRef","setValue","useControllableState","handleChange","useCallback","eventOrValue","selectedValue","nextValue","v","props2","val","CheckboxGroup","colorScheme","size","variant","spanFn","span","mapResponsive","GridItem","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","TagStylesProvider","useTagStyles","Tag","containerStyles","TagLabel","TagLeftIcon","Icon","TagRightIcon","TagCloseIcon","TagCloseButton","btnStyles","t","e","module","this","n","r","i","s","u","a","o","c","f","h","d","l","$","y","M","m","g","D","p","S","_","w","O","b","k","CONTENT_TYPES","CONTENT_STATES","pulseAnimation","Proveedores","searchTerm","setSearchTerm","statusFilter","setStatusFilter","selectedProvider","setSelectedProvider","formData","setFormData","specializationInput","setSpecializationInput","uploadProgress","setUploadProgress","fileInputRef","useRef","selectedGroupId","setSelectedGroupId","selectedContentTypes","setSelectedContentTypes","monitoring","setMonitoring","capturedContent","setCapturedContent","loadingCapture","setLoadingCapture","filterContentType","setFilterContentType","filterState","setFilterState","filterDateFrom","setFilterDateFrom","filterDateTo","setFilterDateTo","selectedCaptured","setSelectedCaptured","isCapturedModalOpen","onCapturedModalOpen","onCapturedModalClose","useDisclosure","lastContentCount","setLastContentCount","showNewContentAlert","setShowNewContentAlert","pollingInterval","setPollingInterval","isCreateOpen","onCreateOpen","onCreateClose","isEditOpen","onEditOpen","onEditClose","isViewOpen","onViewOpen","onViewClose","isMediaOpen","onMediaOpen","onMediaClose","toast","useToast","queryClient","useQueryClient","colorMode","useColorMode","cardBg","useColorModeValue","borderColor","providers","isLoading","useQuery","apiService","providerStats","groups","createProviderMutation","useMutation","data","resetForm","error","_b","_a","updateProviderMutation","id","deleteProviderMutation","status","checkForNewContent","item","dayjs","newCount","useEffect","res","interval","handleStartMonitoring","handleStopMonitoring","handleCreateProvider","handleUpdateProvider","handleDeleteProvider","handleEditProvider","provider","handleViewProvider","handleAddSpecialization","handleRemoveSpecialization","spec","handleFileUpload","event","files","handleRemoveMedia","index","getFileIcon","file","FaImage","FaVideo","FaMusic","FaFile","getFileType","formatFileSize","bytes","sizes","filteredProviders","matchesSearch","matchesStatus","handleDeleteCaptured","prev","handleApproveCaptured","Box","Spinner","Text","VStack","Flex","Heading","Button","FaPlus","SimpleGrid","Stat","StatLabel","StatNumber","StatHelpText","FaUserTie","FaCheckCircle","FaStar","FaFileAlt","Card","CardBody","HStack","FormControl","Input","Select","CardHeader","Alert","AlertIcon","Table","Thead","Tr","Th","Tbody","Td","Avatar","FaEnvelope","FaPhone","Wrap","grupo","WrapItem","Badge","IconButton","FaEye","FaEdit","Menu","MenuButton","FaEllipsisV","MenuList","MenuItem","FaTrash","FormLabel","type","FaPlay","Divider","FaSearch","FaTimes","Image","FaDownload","FaCheck","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Grid","Textarea","grupoId","FaUpload","ModalFooter","Fragment","_c","_d"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}