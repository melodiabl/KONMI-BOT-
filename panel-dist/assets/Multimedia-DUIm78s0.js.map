{"version":3,"file":"Multimedia-DUIm78s0.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/aspect-ratio/aspect-ratio.mjs","../../src/pages/Multimedia.tsx"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx, mapResponsive } from '@chakra-ui/utils';\nimport { Children } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst AspectRatio = forwardRef(\n  function(props, ref) {\n    const { ratio = 4 / 3, children, className, ...rest } = props;\n    const child = Children.only(children);\n    const _className = cx(\"chakra-aspect-ratio\", className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        position: \"relative\",\n        className: _className,\n        _before: {\n          height: 0,\n          content: `\"\"`,\n          display: \"block\",\n          paddingBottom: mapResponsive(ratio, (r) => `${1 / r * 100}%`)\n        },\n        __css: {\n          \"& > *:not(style)\": {\n            overflow: \"hidden\",\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            left: \"0\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"100%\",\n            height: \"100%\"\n          },\n          \"& > img, & > video\": {\n            objectFit: \"cover\"\n          }\n        },\n        ...rest,\n        children: child\n      }\n    );\n  }\n);\nAspectRatio.displayName = \"AspectRatio\";\n\nexport { AspectRatio };\n","import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Input,\n  Select,\n  useToast,\n  Spinner,\n  Flex,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Badge,\n  Icon,\n  useColorModeValue,\n  Grid,\n  Image,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  Textarea,\n  Progress,\n  Tooltip,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  IconButton,\n  AspectRatio,\n  Wrap,\n  WrapItem,\n} from '@chakra-ui/react';\nimport {\n  FaImage,\n  FaVideo,\n  FaMusic,\n  FaFile,\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaDownload,\n  FaEye,\n  FaShare,\n  FaUpload,\n  FaSearch,\n  FaEllipsisV,\n  FaImages,\n  FaMicrophone,\n  FaFileAlt,\n} from 'react-icons/fa';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { apiService } from '../services/api';\n\ninterface MultimediaItem {\n  id: number;\n  name: string;\n  description: string;\n  type: 'image' | 'video' | 'audio' | 'document';\n  format: string;\n  size: number;\n  url: string;\n  thumbnail?: string;\n  duration?: number;\n  tags: string[];\n  category: string;\n  uploadedBy: string;\n  uploadedAt: string;\n  downloads: number;\n  views: number;\n}\n\nexport const Multimedia: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [typeFilter, setTypeFilter] = useState('all');\n  const [selectedItem, setSelectedItem] = useState<MultimediaItem | null>(null);\n\n  const { isOpen: isUploadOpen, onOpen: onUploadOpen, onClose: onUploadClose } = useDisclosure();\n  const { isOpen: isViewOpen, onOpen: onViewOpen, onClose: onViewClose } = useDisclosure();\n\n  const toast = useToast();\n  const queryClient = useQueryClient();\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // Queries\n  const { data: multimediaItems, isLoading } = useQuery('multimedia', () => apiService.getMultimedia('all'));\n  const { data: multimediaStats } = useQuery('multimediaStats', apiService.getMultimediaStats);\n\n  // Mutations\n  const deleteMultimediaMutation = useMutation(\n    (id: number) => apiService.deleteMultimedia(id.toString()),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('multimedia');\n        queryClient.invalidateQueries('multimediaStats');\n        toast({\n          title: 'Archivo eliminado exitosamente',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al eliminar el archivo',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const getTypeIcon = (type: string) => {\n    switch (type) {\n      case 'image': return FaImage;\n      case 'video': return FaVideo;\n      case 'audio': return FaMusic;\n      case 'document': return FaFile;\n      default: return FaFile;\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'image': return 'blue';\n      case 'video': return 'purple';\n      case 'audio': return 'green';\n      case 'document': return 'orange';\n      default: return 'gray';\n    }\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const filteredItems = (multimediaItems as any[])?.filter((item: MultimediaItem) => {\n    const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         item.description.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesType = typeFilter === 'all' || item.type === typeFilter;\n    return matchesSearch && matchesType;\n  }) || [];\n\n  const handleDeleteItem = (id: number) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este archivo?')) {\n      deleteMultimediaMutation.mutate(id);\n    }\n  };\n\n  const handleViewItem = (item: MultimediaItem) => {\n    setSelectedItem(item);\n    onViewOpen();\n  };\n\n  const handleDownload = (item: MultimediaItem) => {\n    const link = document.createElement('a');\n    link.href = item.url;\n    link.download = item.name;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    \n    toast({\n      title: 'Descarga iniciada',\n      description: `Descargando ${item.name}`,\n      status: 'info',\n    });\n  };\n\n  if (isLoading) {\n    return (\n      <Box textAlign=\"center\" py={10}>\n        <Spinner size=\"xl\" />\n        <Text mt={4}>Cargando multimedia...</Text>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <VStack spacing={6} align=\"stretch\">\n        {/* Header */}\n        <Flex align=\"center\" justify=\"space-between\">\n          <Box>\n            <Heading size=\"lg\">Gestión de Multimedia</Heading>\n            <Text color=\"gray.600\" mt={1}>\n              Administra archivos multimedia del sistema\n            </Text>\n          </Box>\n          <Button\n            leftIcon={<FaUpload />}\n            colorScheme=\"blue\"\n            onClick={onUploadOpen}\n          >\n            Subir Archivos\n          </Button>\n        </Flex>\n\n        {/* Estadísticas */}\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={6}>\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaImages} color=\"blue.500\" />\n                    <Text>Total Archivos</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{(multimediaStats as any)?.totalFiles || 0}</StatNumber>\n                <StatHelpText>Archivos en el sistema</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaVideo} color=\"purple.500\" />\n                    <Text>Videos</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{(multimediaStats as any)?.videos || 0}</StatNumber>\n                <StatHelpText>Archivos de video</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaImage} color=\"green.500\" />\n                    <Text>Imágenes</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{(multimediaStats as any)?.images || 0}</StatNumber>\n                <StatHelpText>Archivos de imagen</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaMicrophone} color=\"orange.500\" />\n                    <Text>Audio</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{(multimediaStats as any)?.audio || 0}</StatNumber>\n                <StatHelpText>Archivos de audio</StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n\n        {/* Filtros */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <HStack spacing={4} wrap=\"wrap\">\n              <Input\n                placeholder=\"Buscar archivos...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                maxW=\"300px\"\n              />\n              <Select\n                value={typeFilter}\n                onChange={(e) => setTypeFilter(e.target.value)}\n                maxW=\"200px\"\n              >\n                <option value=\"all\">Todos los tipos</option>\n                <option value=\"image\">Imágenes</option>\n                <option value=\"video\">Videos</option>\n                <option value=\"audio\">Audio</option>\n                <option value=\"document\">Documentos</option>\n              </Select>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Galería de Multimedia */}\n        <Wrap spacing={4}>\n          {filteredItems.map((item: MultimediaItem) => (\n            <WrapItem key={item.id}>\n              <Card\n                bg={cardBg}\n                border=\"1px\"\n                borderColor={borderColor}\n                maxW=\"300px\"\n                cursor=\"pointer\"\n                _hover={{ transform: 'translateY(-2px)', shadow: 'lg' }}\n                transition=\"all 0.2s\"\n              >\n                <CardBody p={0}>\n                  <AspectRatio ratio={16 / 9}>\n                    {item.type === 'image' ? (\n                      <Image\n                        src={item.thumbnail || item.url}\n                        alt={item.name}\n                        objectFit=\"cover\"\n                        onClick={() => handleViewItem(item)}\n                      />\n                    ) : (\n                      <Box\n                        bg={`${getTypeColor(item.type)}.100`}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                        onClick={() => handleViewItem(item)}\n                      >\n                        <Icon\n                          as={getTypeIcon(item.type)}\n                          size=\"3xl\"\n                          color={`${getTypeColor(item.type)}.500`}\n                        />\n                      </Box>\n                    )}\n                  </AspectRatio>\n                  <Box p={4}>\n                    <VStack align=\"start\" spacing={2}>\n                      <HStack justify=\"space-between\" w=\"full\">\n                        <Text fontWeight=\"semibold\" noOfLines={1}>\n                          {item.name}\n                        </Text>\n                        <Badge colorScheme={getTypeColor(item.type)} size=\"sm\">\n                          {item.format.toUpperCase()}\n                        </Badge>\n                      </HStack>\n                      <Text fontSize=\"sm\" color=\"gray.500\" noOfLines={2}>\n                        {item.description}\n                      </Text>\n                      <HStack justify=\"space-between\" w=\"full\">\n                        <Text fontSize=\"xs\" color=\"gray.400\">\n                          {formatFileSize(item.size)}\n                        </Text>\n                        <Text fontSize=\"xs\" color=\"gray.400\">\n                          {item.views} vistas\n                        </Text>\n                      </HStack>\n                      <HStack spacing={1} wrap=\"wrap\">\n                        {item.tags.slice(0, 2).map((tag, index) => (\n                          <Badge key={index} colorScheme=\"blue\" variant=\"subtle\" fontSize=\"xs\">\n                            {tag}\n                          </Badge>\n                        ))}\n                        {item.tags.length > 2 && (\n                          <Badge colorScheme=\"gray\" variant=\"subtle\" fontSize=\"xs\">\n                            +{item.tags.length - 2}\n                          </Badge>\n                        )}\n                      </HStack>\n                      <HStack justify=\"space-between\" w=\"full\">\n                        <HStack spacing={2}>\n                          <Tooltip label=\"Ver detalles\">\n                            <IconButton\n                              aria-label=\"Ver archivo\"\n                              icon={<FaEye />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              onClick={() => handleViewItem(item)}\n                            />\n                          </Tooltip>\n                          <Tooltip label=\"Descargar\">\n                            <IconButton\n                              aria-label=\"Descargar archivo\"\n                              icon={<FaDownload />}\n                              size=\"sm\"\n                              variant=\"ghost\"\n                              onClick={() => handleDownload(item)}\n                            />\n                          </Tooltip>\n                        </HStack>\n                        <Menu>\n                          <MenuButton\n                            as={IconButton}\n                            aria-label=\"Más opciones\"\n                            icon={<FaEllipsisV />}\n                            size=\"sm\"\n                            variant=\"ghost\"\n                          />\n                          <MenuList>\n                            <MenuItem\n                              icon={<FaTrash />}\n                              color=\"red.500\"\n                              onClick={() => handleDeleteItem(item.id)}\n                            >\n                              Eliminar\n                            </MenuItem>\n                          </MenuList>\n                        </Menu>\n                      </HStack>\n                    </VStack>\n                  </Box>\n                </CardBody>\n              </Card>\n            </WrapItem>\n          ))}\n        </Wrap>\n      </VStack>\n\n      {/* Modal Subir Archivos */}\n      <Modal isOpen={isUploadOpen} onClose={onUploadClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Subir Archivos Multimedia</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <VStack spacing={6}>\n              <Box\n                border=\"2px dashed\"\n                borderColor=\"gray.300\"\n                borderRadius=\"lg\"\n                p={8}\n                textAlign=\"center\"\n                w=\"full\"\n                _hover={{ borderColor: 'blue.500' }}\n                transition=\"all 0.2s\"\n              >\n                <Icon as={FaUpload} size=\"4xl\" color=\"gray.400\" mb={4} />\n                <Text fontSize=\"lg\" fontWeight=\"semibold\" mb={2}>\n                  Arrastra archivos aquí o haz clic para seleccionar\n                </Text>\n                <Text fontSize=\"sm\" color=\"gray.500\" mb={4}>\n                  Soporta imágenes, videos, audio y documentos\n                </Text>\n                <Input\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*,video/*,audio/*,.pdf,.doc,.docx,.txt\"\n                  display=\"none\"\n                  id=\"file-upload\"\n                />\n                <Button\n                  as=\"label\"\n                  htmlFor=\"file-upload\"\n                  colorScheme=\"blue\"\n                  cursor=\"pointer\"\n                >\n                  Seleccionar Archivos\n                </Button>\n              </Box>\n            </VStack>\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\" mr={3} onClick={onUploadClose}>\n              Cancelar\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n\n      {/* Modal Ver Detalles */}\n      <Modal isOpen={isViewOpen} onClose={onViewClose} size=\"lg\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Detalles del Archivo</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            {selectedItem && (\n              <VStack spacing={4} align=\"stretch\">\n                <HStack>\n                  <Icon\n                    as={getTypeIcon(selectedItem.type)}\n                    color={`${getTypeColor(selectedItem.type)}.500`}\n                    size=\"lg\"\n                  />\n                  <VStack align=\"start\" spacing={1}>\n                    <Heading size=\"md\">{selectedItem.name}</Heading>\n                    <Badge colorScheme={getTypeColor(selectedItem.type)}>\n                      {selectedItem.format.toUpperCase()}\n                    </Badge>\n                  </VStack>\n                </HStack>\n\n                <Text>{selectedItem.description}</Text>\n\n                <SimpleGrid columns={2} spacing={4}>\n                  <Stat>\n                    <StatLabel>Tamaño</StatLabel>\n                    <StatNumber>{formatFileSize(selectedItem.size)}</StatNumber>\n                  </Stat>\n                  <Stat>\n                    <StatLabel>Descargas</StatLabel>\n                    <StatNumber>{selectedItem.downloads}</StatNumber>\n                  </Stat>\n                  <Stat>\n                    <StatLabel>Vistas</StatLabel>\n                    <StatNumber>{selectedItem.views}</StatNumber>\n                  </Stat>\n                  <Stat>\n                    <StatLabel>Categoría</StatLabel>\n                    <StatNumber>{selectedItem.category}</StatNumber>\n                  </Stat>\n                </SimpleGrid>\n\n                <Text fontSize=\"sm\" color=\"gray.500\">\n                  Subido por: {selectedItem.uploadedBy}\n                </Text>\n                <Text fontSize=\"sm\" color=\"gray.500\">\n                  Fecha: {new Date(selectedItem.uploadedAt).toLocaleDateString()}\n                </Text>\n              </VStack>\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button variant=\"ghost\" mr={3} onClick={onViewClose}>\n              Cerrar\n            </Button>\n            <Button\n              colorScheme=\"blue\"\n              onClick={() => selectedItem && handleDownload(selectedItem)}\n            >\n              Descargar\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Multimedia;\n"],"names":["AspectRatio","forwardRef","props","ref","ratio","children","className","rest","child","Children","_className","cx","jsx","chakra","mapResponsive","r","Multimedia","searchTerm","setSearchTerm","useState","typeFilter","setTypeFilter","selectedItem","setSelectedItem","isUploadOpen","onUploadOpen","onUploadClose","useDisclosure","isViewOpen","onViewOpen","onViewClose","toast","useToast","queryClient","useQueryClient","cardBg","useColorModeValue","borderColor","multimediaItems","isLoading","useQuery","apiService","multimediaStats","deleteMultimediaMutation","useMutation","id","error","_b","_a","getTypeIcon","type","FaImage","FaVideo","FaMusic","FaFile","getTypeColor","formatFileSize","bytes","k","sizes","i","filteredItems","item","matchesSearch","matchesType","handleDeleteItem","handleViewItem","handleDownload","link","jsxs","Box","Spinner","Text","VStack","Flex","Heading","Button","FaUpload","SimpleGrid","Card","CardBody","Stat","StatLabel","HStack","Icon","FaImages","StatNumber","StatHelpText","FaMicrophone","Input","e","Select","Wrap","WrapItem","Image","Badge","tag","index","Tooltip","IconButton","FaEye","FaDownload","Menu","MenuButton","FaEllipsisV","MenuList","MenuItem","FaTrash","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter"],"mappings":"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","x_google_ignoreList":[0]}