{"version":3,"file":"Aportes-DNB-I4Wj.js","sources":["../../src/pages/Aportes.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Button,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Badge,\n  IconButton,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  FormControl,\n  FormLabel,\n  Textarea,\n  Select,\n  useToast,\n  Spinner,\n  Alert,\n  AlertIcon,\n  Flex,\n  Card,\n  CardBody,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  useColorModeValue,\n  Tooltip,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuDivider,\n  Image,\n  Link,\n} from '@chakra-ui/react';\nimport {\n  FaSearch,\n  FaPlus,\n  FaEdit,\n  FaTrash,\n  FaEye,\n  FaEllipsisV,\n  FaCheck,\n  FaTimes,\n  FaClock,\n  FaUser,\n  FaFileAlt,\n  FaLink,\n  FaDownload,\n  FaShare,\n  FaThumbsUp,\n  FaThumbsDown,\n} from 'react-icons/fa';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { apiService } from '../services/api';\nimport { Aporte } from '../types';\n\n\n\ninterface AporteFormData {\n  titulo: string;\n  descripcion: string;\n  contenido: string;\n  tipo: string;\n  fuente: 'colaborador' | 'proveedor';\n  estado: 'pendiente' | 'aprobado' | 'rechazado';\n  grupo_id?: number;\n}\n\nconst estadoColors = {\n  pendiente: 'yellow',\n  aprobado: 'green',\n  rechazado: 'red',\n  revisando: 'blue',\n};\n\nconst tipoColors = {\n  manga: 'purple',\n  anime: 'blue',\n  novela: 'green',\n  imagen: 'pink',\n  video: 'red',\n  otro: 'gray',\n};\n\nconst fuenteColors = {\n  usuario: 'blue',\n  proveedor: 'green',\n  admin: 'red',\n  sistema: 'gray',\n};\n\nexport const Aportes: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [estadoFilter, setEstadoFilter] = useState('');\n  const [fuenteFilter, setFuenteFilter] = useState('');\n  const [tipoFilter, setTipoFilter] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [editingAporte, setEditingAporte] = useState<Aporte | null>(null);\n  const [formData, setFormData] = useState<AporteFormData>({\n    titulo: '',\n    descripcion: '',\n    contenido: '',\n    tipo: 'manga',\n    fuente: 'colaborador',\n    estado: 'pendiente',\n  });\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const toast = useToast();\n  const queryClient = useQueryClient();\n\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // Queries\n  const { data: aportesData, isLoading, error } = useQuery(\n    ['aportes', currentPage, searchTerm, estadoFilter, fuenteFilter, tipoFilter],\n    () => apiService.getAportes(currentPage, 20, searchTerm, estadoFilter, fuenteFilter)\n  );\n\n  const { data: stats } = useQuery('aporteStats', apiService.getAporteStats);\n\n  // Mutations\n  const createAporteMutation = useMutation(apiService.createAporte, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('aportes');\n      toast({\n        title: 'Aporte creado',\n        description: 'El aporte ha sido creado exitosamente',\n        status: 'success',\n      });\n      onClose();\n      resetForm();\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Error al crear aporte',\n        status: 'error',\n      });\n    },\n  });\n\n  const updateAporteMutation = useMutation(\n    (data: { id: number; aporte: Partial<Aporte> }) =>\n      apiService.updateAporte(data.id, data.aporte),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('aportes');\n        toast({\n          title: 'Aporte actualizado',\n          description: 'El aporte ha sido actualizado exitosamente',\n          status: 'success',\n        });\n        onClose();\n        resetForm();\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al actualizar aporte',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const deleteAporteMutation = useMutation(apiService.deleteAporte, {\n    onSuccess: () => {\n      queryClient.invalidateQueries('aportes');\n      toast({\n        title: 'Aporte eliminado',\n        description: 'El aporte ha sido eliminado exitosamente',\n        status: 'success',\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: 'Error',\n        description: error.response?.data?.message || 'Error al eliminar aporte',\n        status: 'error',\n      });\n    },\n  });\n\n  const approveAporteMutation = useMutation(\n    (data: { id: number; estado: 'pendiente' | 'aprobado' | 'rechazado'; motivo_rechazo?: string }) =>\n      apiService.approveAporte(data.id, data.estado, data.motivo_rechazo),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries('aportes');\n        toast({\n          title: 'Estado actualizado',\n          description: 'El estado del aporte ha sido actualizado',\n          status: 'success',\n        });\n      },\n      onError: (error: any) => {\n        toast({\n          title: 'Error',\n          description: error.response?.data?.message || 'Error al actualizar estado',\n          status: 'error',\n        });\n      },\n    }\n  );\n\n  const resetForm = () => {\n    setFormData({\n      titulo: '',\n      descripcion: '',\n      contenido: '',\n      tipo: 'manga',\n      fuente: 'colaborador',\n      estado: 'pendiente',\n    });\n    setEditingAporte(null);\n  };\n\n  const handleOpenCreate = () => {\n    resetForm();\n    onOpen();\n  };\n\n  const handleOpenEdit = (aporte: Aporte) => {\n    setEditingAporte(aporte);\n    setFormData({\n      titulo: aporte.titulo,\n      descripcion: aporte.descripcion || '',\n      contenido: aporte.contenido,\n      tipo: aporte.tipo,\n      fuente: aporte.fuente as 'colaborador' | 'proveedor',\n      estado: aporte.estado as 'pendiente' | 'aprobado' | 'rechazado',\n      grupo_id: aporte.grupo_id,\n    });\n    onOpen();\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (editingAporte) {\n      updateAporteMutation.mutate({\n        id: editingAporte.id,\n        aporte: formData as Partial<Aporte>,\n      });\n    } else {\n      createAporteMutation.mutate(formData as Partial<Aporte>);\n    }\n  };\n\n  const handleDelete = (aporteId: number) => {\n    if (window.confirm('¿Estás seguro de que quieres eliminar este aporte?')) {\n      deleteAporteMutation.mutate(aporteId);\n    }\n  };\n\n  const handleApprove = (aporteId: number) => {\n    approveAporteMutation.mutate({ id: aporteId, estado: 'aprobado' });\n  };\n\n  const handleReject = (aporteId: number) => {\n    const motivo = window.prompt('Motivo del rechazo:');\n    if (motivo !== null) {\n      approveAporteMutation.mutate({ id: aporteId, estado: 'rechazado', motivo_rechazo: motivo });\n    }\n  };\n\n  if (error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        Error al cargar aportes: {(error as any).message}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <VStack spacing={6} align=\"stretch\">\n        {/* Header */}\n        <Flex align=\"center\" justify=\"space-between\">\n          <Heading size=\"lg\">Gestión de Aportes</Heading>\n          <Button\n            leftIcon={<FaPlus />}\n            colorScheme=\"green\"\n            onClick={handleOpenCreate}\n          >\n            Nuevo Aporte\n          </Button>\n        </Flex>\n\n        {/* Estadísticas */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <HStack spacing={8} justify=\"center\">\n              <Stat textAlign=\"center\">\n                <StatLabel>Total Aportes</StatLabel>\n                <StatNumber>{stats?.totalAportes || 0}</StatNumber>\n                <StatHelpText>En el sistema</StatHelpText>\n              </Stat>\n              <Stat textAlign=\"center\">\n                <StatLabel>Aprobados</StatLabel>\n                <StatNumber color=\"green.500\">{stats?.aportesAprobados || 0}</StatNumber>\n                <StatHelpText>Aportes aprobados</StatHelpText>\n              </Stat>\n              <Stat textAlign=\"center\">\n                <StatLabel>Pendientes</StatLabel>\n                <StatNumber color=\"yellow.500\">{stats?.aportesPendientes || 0}</StatNumber>\n                <StatHelpText>En revisión</StatHelpText>\n              </Stat>\n              <Stat textAlign=\"center\">\n                <StatLabel>Rechazados</StatLabel>\n                <StatNumber color=\"red.500\">{stats?.aportesRechazados || 0}</StatNumber>\n                <StatHelpText>Aportes rechazados</StatHelpText>\n              </Stat>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Filtros */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <HStack spacing={4} wrap=\"wrap\">\n              <InputGroup maxW=\"300px\">\n                <InputLeftElement pointerEvents=\"none\">\n                  <FaSearch color=\"gray.300\" />\n                </InputLeftElement>\n                <Input\n                  placeholder=\"Buscar aportes...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                />\n              </InputGroup>\n              <Select\n                placeholder=\"Filtrar por estado\"\n                value={estadoFilter}\n                onChange={(e) => setEstadoFilter(e.target.value)}\n                maxW=\"200px\"\n              >\n                <option value=\"pendiente\">Pendiente</option>\n                <option value=\"aprobado\">Aprobado</option>\n                <option value=\"rechazado\">Rechazado</option>\n                <option value=\"revisando\">Revisando</option>\n              </Select>\n              <Select\n                placeholder=\"Filtrar por tipo\"\n                value={tipoFilter}\n                onChange={(e) => setTipoFilter(e.target.value)}\n                maxW=\"200px\"\n              >\n                <option value=\"manga\">Manga</option>\n                <option value=\"anime\">Anime</option>\n                <option value=\"novela\">Novela</option>\n                <option value=\"imagen\">Imagen</option>\n                <option value=\"video\">Video</option>\n                <option value=\"otro\">Otro</option>\n              </Select>\n              <Select\n                placeholder=\"Filtrar por fuente\"\n                value={fuenteFilter}\n                onChange={(e) => setFuenteFilter(e.target.value)}\n                maxW=\"200px\"\n              >\n                <option value=\"usuario\">Usuario</option>\n                <option value=\"proveedor\">Proveedor</option>\n                <option value=\"admin\">Admin</option>\n                <option value=\"sistema\">Sistema</option>\n              </Select>\n            </HStack>\n          </CardBody>\n        </Card>\n\n        {/* Tabla */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            {isLoading ? (\n              <Box textAlign=\"center\" py={8}>\n                <Spinner size=\"xl\" />\n                <Text mt={4}>Cargando aportes...</Text>\n              </Box>\n            ) : (\n              <Box overflowX=\"auto\">\n                <Table variant=\"simple\">\n                  <Thead>\n                    <Tr>\n                      <Th>Título</Th>\n                      <Th>Tipo</Th>\n                      <Th>Fuente</Th>\n                      <Th>Estado</Th>\n                      <Th>Usuario</Th>\n                      <Th>Fecha</Th>\n                      <Th>Acciones</Th>\n                    </Tr>\n                  </Thead>\n                  <Tbody>\n                    {aportesData?.aportes?.map((aporte: Aporte) => (\n                      <Tr key={aporte.id}>\n                        <Td>\n                          <VStack align=\"start\" spacing={1}>\n                            <Text fontWeight=\"semibold\">{aporte.titulo}</Text>\n                            {aporte.descripcion && (\n                              <Text fontSize=\"sm\" color=\"gray.500\" noOfLines={2}>\n                                {aporte.descripcion}\n                              </Text>\n                            )}\n                            <Text fontSize=\"xs\" color=\"gray.400\">\n                              ID: {aporte.id}\n                            </Text>\n                          </VStack>\n                        </Td>\n                        <Td>\n                          <Badge\n                            colorScheme={tipoColors[aporte.tipo as keyof typeof tipoColors] || 'gray'}\n                            variant=\"subtle\"\n                          >\n                            {aporte.tipo}\n                          </Badge>\n                        </Td>\n                        <Td>\n                          <Badge\n                            colorScheme={fuenteColors[aporte.fuente as keyof typeof fuenteColors] || 'gray'}\n                            variant=\"subtle\"\n                          >\n                            {aporte.fuente}\n                          </Badge>\n                        </Td>\n                        <Td>\n                          <Badge\n                            colorScheme={estadoColors[aporte.estado as keyof typeof estadoColors] || 'gray'}\n                            variant=\"subtle\"\n                          >\n                            {aporte.estado}\n                          </Badge>\n                        </Td>\n                        <Td>\n                          <Text fontSize=\"sm\">{aporte.usuario?.username || 'N/A'}</Text>\n                        </Td>\n                        <Td>\n                          <Text fontSize=\"sm\">\n                            {new Date(aporte.created_at).toLocaleDateString()}\n                          </Text>\n                        </Td>\n                        <Td>\n                          <HStack spacing={2}>\n                            <Tooltip label=\"Ver detalles\">\n                              <IconButton\n                                aria-label=\"Ver detalles\"\n                                icon={<FaEye />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                colorScheme=\"blue\"\n                              />\n                            </Tooltip>\n                            <Tooltip label=\"Editar aporte\">\n                              <IconButton\n                                aria-label=\"Editar aporte\"\n                                icon={<FaEdit />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                colorScheme=\"orange\"\n                                onClick={() => handleOpenEdit(aporte)}\n                              />\n                            </Tooltip>\n                            <Menu>\n                              <MenuButton\n                                as={IconButton}\n                                aria-label=\"Más opciones\"\n                                icon={<FaEllipsisV />}\n                                size=\"sm\"\n                                variant=\"ghost\"\n                              />\n                              <MenuList>\n                                {aporte.estado === 'pendiente' && (\n                                  <>\n                                    <MenuItem\n                                      icon={<FaCheck />}\n                                      onClick={() => handleApprove(aporte.id)}\n                                    >\n                                      Aprobar\n                                    </MenuItem>\n                                    <MenuItem\n                                      icon={<FaTimes />}\n                                      onClick={() => handleReject(aporte.id)}\n                                    >\n                                      Rechazar\n                                    </MenuItem>\n                                  </>\n                                )}\n                                <MenuItem\n                                  icon={<FaDownload />}\n                                >\n                                  Descargar\n                                </MenuItem>\n                                <MenuItem\n                                  icon={<FaShare />}\n                                >\n                                  Compartir\n                                </MenuItem>\n                                <MenuDivider />\n                                <MenuItem\n                                  icon={<FaTrash />}\n                                  color=\"red.500\"\n                                  onClick={() => handleDelete(aporte.id)}\n                                >\n                                  Eliminar\n                                </MenuItem>\n                              </MenuList>\n                            </Menu>\n                          </HStack>\n                        </Td>\n                      </Tr>\n                    ))}\n                  </Tbody>\n                </Table>\n              </Box>\n            )}\n\n            {/* Paginación */}\n            {aportesData?.pagination && (\n              <Flex justify=\"center\" mt={6}>\n                <HStack spacing={2}>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                    isDisabled={currentPage === 1}\n                  >\n                    Anterior\n                  </Button>\n                  <Text>\n                    Página {currentPage} de {aportesData.pagination.totalPages}\n                  </Text>\n                  <Button\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                    isDisabled={currentPage === aportesData.pagination.totalPages}\n                  >\n                    Siguiente\n                  </Button>\n                </HStack>\n              </Flex>\n            )}\n          </CardBody>\n        </Card>\n      </VStack>\n\n      {/* Modal de Crear/Editar Aporte */}\n      <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <form onSubmit={handleSubmit}>\n            <ModalHeader>\n              {editingAporte ? 'Editar Aporte' : 'Crear Nuevo Aporte'}\n            </ModalHeader>\n            <ModalBody>\n              <VStack spacing={4}>\n                <FormControl isRequired>\n                  <FormLabel>Título</FormLabel>\n                  <Input\n                    value={formData.titulo}\n                    onChange={(e) => setFormData({ ...formData, titulo: e.target.value })}\n                    placeholder=\"Ingresa el título del aporte\"\n                  />\n                </FormControl>\n\n                <FormControl>\n                  <FormLabel>Descripción</FormLabel>\n                  <Textarea\n                    value={formData.descripcion}\n                    onChange={(e) => setFormData({ ...formData, descripcion: e.target.value })}\n                    placeholder=\"Descripción opcional del aporte\"\n                    rows={3}\n                  />\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Contenido</FormLabel>\n                  <Textarea\n                    value={formData.contenido}\n                    onChange={(e) => setFormData({ ...formData, contenido: e.target.value })}\n                    placeholder=\"Contenido del aporte (enlace, texto, etc.)\"\n                    rows={5}\n                  />\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Tipo</FormLabel>\n                  <Select\n                    value={formData.tipo}\n                    onChange={(e) => setFormData({ ...formData, tipo: e.target.value })}\n                  >\n                    <option value=\"manga\">Manga</option>\n                    <option value=\"anime\">Anime</option>\n                    <option value=\"novela\">Novela</option>\n                    <option value=\"imagen\">Imagen</option>\n                    <option value=\"video\">Video</option>\n                    <option value=\"otro\">Otro</option>\n                  </Select>\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Fuente</FormLabel>\n                  <Select\n                    value={formData.fuente}\n                    onChange={(e) => setFormData({ ...formData, fuente: e.target.value as 'colaborador' | 'proveedor' })}\n                  >\n                    <option value=\"colaborador\">Colaborador</option>\n                    <option value=\"proveedor\">Proveedor</option>\n                  </Select>\n                </FormControl>\n\n                <FormControl isRequired>\n                  <FormLabel>Estado</FormLabel>\n                  <Select\n                    value={formData.estado}\n                    onChange={(e) => setFormData({ ...formData, estado: e.target.value as 'pendiente' | 'aprobado' | 'rechazado' })}\n                  >\n                    <option value=\"pendiente\">Pendiente</option>\n                    <option value=\"aprobado\">Aprobado</option>\n                    <option value=\"rechazado\">Rechazado</option>\n\n                  </Select>\n                </FormControl>\n              </VStack>\n            </ModalBody>\n            <ModalFooter>\n              <Button variant=\"ghost\" mr={3} onClick={onClose}>\n                Cancelar\n              </Button>\n              <Button\n                colorScheme=\"blue\"\n                type=\"submit\"\n                isLoading={createAporteMutation.isLoading || updateAporteMutation.isLoading}\n              >\n                {editingAporte ? 'Actualizar' : 'Crear'}\n              </Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Aportes;\n\n\n\n"],"names":["estadoColors","tipoColors","fuenteColors","Aportes","searchTerm","setSearchTerm","useState","estadoFilter","setEstadoFilter","fuenteFilter","setFuenteFilter","tipoFilter","setTipoFilter","currentPage","setCurrentPage","editingAporte","setEditingAporte","formData","setFormData","isOpen","onOpen","onClose","useDisclosure","toast","useToast","queryClient","useQueryClient","cardBg","useColorModeValue","borderColor","aportesData","isLoading","error","useQuery","apiService","stats","createAporteMutation","useMutation","resetForm","updateAporteMutation","data","deleteAporteMutation","approveAporteMutation","handleOpenCreate","handleOpenEdit","aporte","handleSubmit","e","handleDelete","aporteId","handleApprove","handleReject","motivo","jsxs","Alert","jsx","AlertIcon","Box","VStack","Flex","Heading","Button","FaPlus","Card","CardBody","HStack","Stat","StatLabel","StatNumber","StatHelpText","InputGroup","InputLeftElement","FaSearch","Input","Select","Spinner","Text","Table","Thead","Tr","Th","Tbody","_a","Td","Badge","Tooltip","IconButton","FaEye","FaEdit","Menu","MenuButton","FaEllipsisV","MenuList","Fragment","MenuItem","FaCheck","FaTimes","FaDownload","FaShare","MenuDivider","FaTrash","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","FormControl","FormLabel","Textarea","ModalFooter"],"mappings":"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"}