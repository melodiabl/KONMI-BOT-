{"version":3,"file":"input-element-D4QcLV82.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/input/input-group.mjs","../../node_modules/@chakra-ui/react/dist/esm/input/input-element.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx, getValidChildren, compact } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nconst InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = input.height ?? input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = input.height ?? input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      const theming = compact({\n        size: child.props?.size || props.size,\n        variant: child.props?.variant || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          // Parts of inputs override z-index to ensure that they stack correctly on each other\n          // Create a new stacking context so that these overrides don't leak out and conflict with other z-indexes\n          isolation: \"isolate\",\n          ...styles.group\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport { InputGroup, useInputGroupStyles };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useInputGroupStyles } from './input-group.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst StyledInputElement = chakra(\"div\", {\n  baseStyle: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: 2\n  }\n});\nconst InputElement = forwardRef(\n  function InputElement2(props, ref) {\n    const { placement = \"left\", ...rest } = props;\n    const styles = useInputGroupStyles();\n    const input = styles.field;\n    const attr = placement === \"left\" ? \"insetStart\" : \"insetEnd\";\n    const elementStyles = {\n      [attr]: \"0\",\n      width: input?.height ?? input?.h,\n      height: input?.height ?? input?.h,\n      fontSize: input?.fontSize,\n      ...styles.element\n    };\n    return /* @__PURE__ */ jsx(StyledInputElement, { ref, __css: elementStyles, ...rest });\n  }\n);\nInputElement.id = \"InputElement\";\nInputElement.displayName = \"InputElement\";\nconst InputLeftElement = forwardRef(\n  function InputLeftElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__left-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"left\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputLeftElement.id = \"InputLeftElement\";\nInputLeftElement.displayName = \"InputLeftElement\";\nconst InputRightElement = forwardRef(\n  function InputRightElement2(props, ref) {\n    const { className, ...rest } = props;\n    const _className = cx(\"chakra-input__right-element\", className);\n    return /* @__PURE__ */ jsx(\n      InputElement,\n      {\n        ref,\n        placement: \"right\",\n        className: _className,\n        ...rest\n      }\n    );\n  }\n);\nInputRightElement.id = \"InputRightElement\";\nInputRightElement.displayName = \"InputRightElement\";\n\nexport { InputLeftElement, InputRightElement };\n"],"names":["InputGroupStylesProvider","useInputGroupStyles","createContext","InputGroup","forwardRef","props","ref","styles","useMultiStyleConfig","children","className","rest","omitThemingProps","_className","cx","groupStyles","validChildren","getValidChildren","input","child","clones","theming","compact","_a","_b","cloneElement","jsx","chakra","StyledInputElement","InputElement","placement","elementStyles","InputLeftElement","InputRightElement"],"mappings":"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","x_google_ignoreList":[0,1]}