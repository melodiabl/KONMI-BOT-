{"version":3,"file":"Analytics-CBtcwlfH.js","sources":["../../src/pages/Analytics.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Select,\n  useToast,\n  Spinner,\n  Alert,\n  AlertIcon,\n  Flex,\n  SimpleGrid,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  StatArrow,\n  Progress,\n  Badge,\n  Icon,\n  useColorModeValue,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Divider,\n  Grid,\n  GridItem,\n} from '@chakra-ui/react';\nimport {\n  FaChartLine,\n  FaUsers,\n  FaWhatsapp,\n  FaFileAlt,\n  FaClock,\n  FaDownload,\n  FaCalendar,\n  FaArrowUp,\n  FaArrowDown,\n  FaExclamationTriangle,\n  FaCheckCircle,\n  FaEye,\n  FaServer,\n  FaDatabase,\n  FaNetworkWired,\n  FaMobile,\n  FaDesktop,\n} from 'react-icons/fa';\nimport { useQuery } from 'react-query';\nimport { apiService } from '../services/api';\n\ninterface AnalyticsData {\n  overview: {\n    totalUsers: number;\n    totalGroups: number;\n    totalAportes: number;\n    totalPedidos: number;\n    activeUsers: number;\n    botUptime: string;\n  };\n  trends: {\n    usersGrowth: number;\n    groupsGrowth: number;\n    aportesGrowth: number;\n    pedidosGrowth: number;\n  };\n  engagement: {\n    dailyActiveUsers: number;\n    weeklyActiveUsers: number;\n    monthlyActiveUsers: number;\n    averageSessionTime: string;\n    bounceRate: number;\n  };\n  performance: {\n    responseTime: number;\n    uptime: number;\n    errorRate: number;\n    throughput: number;\n  };\n  topContent: Array<{\n    id: number;\n    title: string;\n    views: number;\n    likes: number;\n    shares: number;\n    type: string;\n  }>;\n  userActivity: Array<{\n    date: string;\n    users: number;\n    sessions: number;\n    pageViews: number;\n  }>;\n}\n\nexport const Analytics: React.FC = () => {\n  const [timeRange, setTimeRange] = useState('7d');\n  const [activeTab, setActiveTab] = useState(0);\n\n  const toast = useToast();\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n\n  // Queries\n  const { data: analyticsData, isLoading, error } = useQuery(\n    ['analytics', timeRange],\n    () => apiService.getAnalytics(timeRange)\n  );\n\n  const { data: userStats } = useQuery('userStats', apiService.getUsuarioStats);\n  const { data: groupStats } = useQuery('groupStats', apiService.getGroupStats);\n  const { data: aporteStats } = useQuery('aporteStats', apiService.getAporteStats);\n  const { data: pedidoStats } = useQuery('pedidoStats', apiService.getPedidoStats);\n\n  const getGrowthColor = (growth: number) => {\n    if (growth > 0) return 'green';\n    if (growth < 0) return 'red';\n    return 'gray';\n  };\n\n  const getGrowthIcon = (growth: number) => {\n    if (growth > 0) return FaArrowUp;\n    if (growth < 0) return FaArrowDown;\n    return FaClock;\n  };\n\n  const formatNumber = (num: number) => {\n    if (num >= 1000000) return `${(num / 1000000).toFixed(1)}M`;\n    if (num >= 1000) return `${(num / 1000).toFixed(1)}K`;\n    return num.toString();\n  };\n\n  const formatPercentage = (num: number) => {\n    return `${num.toFixed(1)}%`;\n  };\n\n  if (error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        Error al cargar analíticas: {(error as any).message}\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <VStack spacing={6} align=\"stretch\">\n        {/* Header */}\n        <Flex align=\"center\" justify=\"space-between\">\n          <Box>\n            <Heading size=\"lg\">Analíticas del Sistema</Heading>\n            <Text color=\"gray.600\" mt={1}>\n              Métricas y estadísticas detalladas del sistema\n            </Text>\n          </Box>\n          <HStack spacing={3}>\n            <Select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value)}\n              maxW=\"200px\"\n            >\n              <option value=\"1d\">Último día</option>\n              <option value=\"7d\">Últimos 7 días</option>\n              <option value=\"30d\">Últimos 30 días</option>\n              <option value=\"90d\">Últimos 90 días</option>\n            </Select>\n            <Button\n              leftIcon={<FaDownload />}\n              colorScheme=\"blue\"\n              variant=\"outline\"\n            >\n              Exportar\n            </Button>\n          </HStack>\n        </Flex>\n\n        {/* Métricas Principales */}\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={6}>\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaUsers} color=\"blue.500\" />\n                    <Text>Usuarios Totales</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{formatNumber(userStats?.totalUsuarios || 0)}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  {analyticsData?.trends?.usersGrowth || 0}% vs período anterior\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaWhatsapp} color=\"green.500\" />\n                    <Text>Grupos Activos</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{formatNumber(groupStats?.totalGrupos || 0)}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  {analyticsData?.trends?.groupsGrowth || 0}% vs período anterior\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaFileAlt} color=\"purple.500\" />\n                    <Text>Aportes</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{formatNumber(aporteStats?.totalAportes || 0)}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  {analyticsData?.trends?.aportesGrowth || 0}% vs período anterior\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n\n          <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n            <CardBody>\n              <Stat>\n                <StatLabel>\n                  <HStack>\n                    <Icon as={FaClock} color=\"orange.500\" />\n                    <Text>Pedidos</Text>\n                  </HStack>\n                </StatLabel>\n                <StatNumber>{formatNumber(pedidoStats?.totalPedidos || 0)}</StatNumber>\n                <StatHelpText>\n                  <StatArrow type=\"increase\" />\n                  {analyticsData?.trends?.pedidosGrowth || 0}% vs período anterior\n                </StatHelpText>\n              </Stat>\n            </CardBody>\n          </Card>\n        </SimpleGrid>\n\n        {/* Tabs de Análisis Detallado */}\n        <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n          <CardBody>\n            <Tabs index={activeTab} onChange={setActiveTab}>\n              <TabList>\n                <Tab>\n                  <HStack>\n                    <Icon as={FaChartLine} />\n                    <Text>Resumen</Text>\n                  </HStack>\n                </Tab>\n                <Tab>\n                  <HStack>\n                    <Icon as={FaUsers} />\n                    <Text>Usuarios</Text>\n                  </HStack>\n                </Tab>\n                <Tab>\n                  <HStack>\n                    <Icon as={FaFileAlt} />\n                    <Text>Contenido</Text>\n                  </HStack>\n                </Tab>\n                <Tab>\n                  <HStack>\n                    <Icon as={FaServer} />\n                    <Text>Rendimiento</Text>\n                  </HStack>\n                </Tab>\n              </TabList>\n\n              <TabPanels>\n                {/* Resumen General */}\n                <TabPanel>\n                  <VStack spacing={6} align=\"stretch\">\n                    <Heading size=\"md\">Resumen General</Heading>\n                    \n                    <SimpleGrid columns={{ base: 1, lg: 2 }} spacing={6}>\n                      {/* Engagement */}\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Engagement</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Usuarios Activos Diarios</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatNumber(analyticsData?.engagement?.dailyActiveUsers || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={(analyticsData?.engagement?.dailyActiveUsers || 0) / (userStats?.totalUsuarios || 1) * 100} \n                              colorScheme=\"blue\" \n                            />\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Usuarios Activos Semanales</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatNumber(analyticsData?.engagement?.weeklyActiveUsers || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={(analyticsData?.engagement?.weeklyActiveUsers || 0) / (userStats?.totalUsuarios || 1) * 100} \n                              colorScheme=\"green\" \n                            />\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Usuarios Activos Mensuales</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatNumber(analyticsData?.engagement?.monthlyActiveUsers || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={(analyticsData?.engagement?.monthlyActiveUsers || 0) / (userStats?.totalUsuarios || 1) * 100} \n                              colorScheme=\"purple\" \n                            />\n                          </VStack>\n                        </CardBody>\n                      </Card>\n\n                      {/* Tendencias */}\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Tendencias</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            {analyticsData?.trends && Object.entries(analyticsData.trends).map(([key, value]) => (\n                              <HStack key={key} justify=\"space-between\">\n                                <Text fontSize=\"sm\" textTransform=\"capitalize\">\n                                  {key.replace('Growth', '')}\n                                </Text>\n                                <HStack>\n                                  <Icon \n                                    as={getGrowthIcon(value as number)} \n                                    color={`${getGrowthColor(value as number)}.500`} \n                                  />\n                                  <Text \n                                    fontWeight=\"semibold\" \n                                    color={`${getGrowthColor(value as number)}.500`}\n                                  >\n                                    {(value as number) > 0 ? '+' : ''}{(value as number)}%\n                                  </Text>\n                                </HStack>\n                              </HStack>\n                            ))}\n                          </VStack>\n                        </CardBody>\n                      </Card>\n                    </SimpleGrid>\n\n                    {/* Top Content */}\n                    <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                      <CardHeader>\n                        <Heading size=\"sm\">Contenido Más Popular</Heading>\n                      </CardHeader>\n                      <CardBody>\n                        <Table variant=\"simple\" size=\"sm\">\n                          <Thead>\n                            <Tr>\n                              <Th>Título</Th>\n                              <Th>Tipo</Th>\n                              <Th>Vistas</Th>\n                              <Th>Me gusta</Th>\n                              <Th>Compartidos</Th>\n                            </Tr>\n                          </Thead>\n                          <Tbody>\n                            {analyticsData?.topContent?.slice(0, 5).map((content) => (\n                              <Tr key={content.id}>\n                                <Td>\n                                  <Text fontWeight=\"medium\">{content.title}</Text>\n                                </Td>\n                                <Td>\n                                  <Badge colorScheme=\"blue\" variant=\"subtle\">\n                                    {content.type}\n                                  </Badge>\n                                </Td>\n                                <Td>{formatNumber(content.views)}</Td>\n                                <Td>{formatNumber(content.likes)}</Td>\n                                <Td>{formatNumber(content.shares)}</Td>\n                              </Tr>\n                            ))}\n                          </Tbody>\n                        </Table>\n                      </CardBody>\n                    </Card>\n                  </VStack>\n                </TabPanel>\n\n                {/* Análisis de Usuarios */}\n                <TabPanel>\n                  <VStack spacing={6} align=\"stretch\">\n                    <Heading size=\"md\">Análisis de Usuarios</Heading>\n                    \n                    <SimpleGrid columns={{ base: 1, lg: 2 }} spacing={6}>\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Distribución por Rol</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"red\">Admin</Badge>\n                                <Text fontSize=\"sm\">Administradores</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{userStats?.totalAdmins || 0}</Text>\n                            </HStack>\n                            <Progress value={(userStats?.totalAdmins || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"red\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"blue\">Creador</Badge>\n                                <Text fontSize=\"sm\">Creadores</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{userStats?.totalCreadores || 0}</Text>\n                            </HStack>\n                            <Progress value={(userStats?.totalCreadores || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"blue\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"green\">Moderador</Badge>\n                                <Text fontSize=\"sm\">Moderadores</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{userStats?.totalModeradores || 0}</Text>\n                            </HStack>\n                            <Progress value={(userStats?.totalModeradores || 0) / (userStats?.totalUsuarios || 1) * 100} colorScheme=\"green\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"gray\">Usuario</Badge>\n                                <Text fontSize=\"sm\">Usuarios</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">\n                                {(userStats?.totalUsuarios || 0) - (userStats?.totalAdmins || 0) - (userStats?.totalCreadores || 0) - (userStats?.totalModeradores || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={((userStats?.totalUsuarios || 0) - (userStats?.totalAdmins || 0) - (userStats?.totalCreadores || 0) - (userStats?.totalModeradores || 0)) / (userStats?.totalUsuarios || 1) * 100} \n                              colorScheme=\"gray\" \n                            />\n                          </VStack>\n                        </CardBody>\n                      </Card>\n\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Actividad de Usuarios</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Tiempo Promedio de Sesión</Text>\n                              <Text fontWeight=\"semibold\">\n                                {analyticsData?.engagement?.averageSessionTime || '0m'}\n                              </Text>\n                            </HStack>\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Tasa de Rebote</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatPercentage(analyticsData?.engagement?.bounceRate || 0)}\n                              </Text>\n                            </HStack>\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Usuarios Activos</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatNumber(analyticsData?.overview?.activeUsers || 0)}\n                              </Text>\n                            </HStack>\n                          </VStack>\n                        </CardBody>\n                      </Card>\n                    </SimpleGrid>\n                  </VStack>\n                </TabPanel>\n\n                {/* Análisis de Contenido */}\n                <TabPanel>\n                  <VStack spacing={6} align=\"stretch\">\n                    <Heading size=\"md\">Análisis de Contenido</Heading>\n                    \n                    <SimpleGrid columns={{ base: 1, lg: 2 }} spacing={6}>\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Estados de Aportes</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"green\">Aprobados</Badge>\n                                <Text fontSize=\"sm\">Aportes aprobados</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{aporteStats?.aportesAprobados || 0}</Text>\n                            </HStack>\n                            <Progress value={(aporteStats?.aportesAprobados || 0) / (aporteStats?.totalAportes || 1) * 100} colorScheme=\"green\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"yellow\">Pendientes</Badge>\n                                <Text fontSize=\"sm\">En revisión</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{aporteStats?.aportesPendientes || 0}</Text>\n                            </HStack>\n                            <Progress value={(aporteStats?.aportesPendientes || 0) / (aporteStats?.totalAportes || 1) * 100} colorScheme=\"yellow\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"red\">Rechazados</Badge>\n                                <Text fontSize=\"sm\">Aportes rechazados</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{aporteStats?.aportesRechazados || 0}</Text>\n                            </HStack>\n                            <Progress value={(aporteStats?.aportesRechazados || 0) / (aporteStats?.totalAportes || 1) * 100} colorScheme=\"red\" />\n                          </VStack>\n                        </CardBody>\n                      </Card>\n\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Estados de Pedidos</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"green\">Completados</Badge>\n                                <Text fontSize=\"sm\">Pedidos finalizados</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{pedidoStats?.pedidosCompletados || 0}</Text>\n                            </HStack>\n                            <Progress value={(pedidoStats?.pedidosCompletados || 0) / (pedidoStats?.totalPedidos || 1) * 100} colorScheme=\"green\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"yellow\">Pendientes</Badge>\n                                <Text fontSize=\"sm\">En espera</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{pedidoStats?.pedidosPendientes || 0}</Text>\n                            </HStack>\n                            <Progress value={(pedidoStats?.pedidosPendientes || 0) / (pedidoStats?.totalPedidos || 1) * 100} colorScheme=\"yellow\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <HStack>\n                                <Badge colorScheme=\"blue\">En Proceso</Badge>\n                                <Text fontSize=\"sm\">En desarrollo</Text>\n                              </HStack>\n                              <Text fontWeight=\"semibold\">{pedidoStats?.pedidosEnProceso || 0}</Text>\n                            </HStack>\n                            <Progress value={(pedidoStats?.pedidosEnProceso || 0) / (pedidoStats?.totalPedidos || 1) * 100} colorScheme=\"blue\" />\n                          </VStack>\n                        </CardBody>\n                      </Card>\n                    </SimpleGrid>\n                  </VStack>\n                </TabPanel>\n\n                {/* Análisis de Rendimiento */}\n                <TabPanel>\n                  <VStack spacing={6} align=\"stretch\">\n                    <Heading size=\"md\">Análisis de Rendimiento</Heading>\n                    \n                    <SimpleGrid columns={{ base: 1, lg: 2 }} spacing={6}>\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Métricas del Sistema</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Tiempo de Respuesta</Text>\n                              <Text fontWeight=\"semibold\">\n                                {analyticsData?.performance?.responseTime || 0}ms\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={Math.min((analyticsData?.performance?.responseTime || 0) / 1000 * 100, 100)} \n                              colorScheme={analyticsData?.performance?.responseTime < 500 ? 'green' : 'orange'} \n                            />\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Uptime</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatPercentage(analyticsData?.performance?.uptime || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress value={analyticsData?.performance?.uptime || 0} colorScheme=\"green\" />\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Tasa de Error</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatPercentage(analyticsData?.performance?.errorRate || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={analyticsData?.performance?.errorRate || 0} \n                              colorScheme={analyticsData?.performance?.errorRate < 5 ? 'green' : 'red'} \n                            />\n                          </VStack>\n                        </CardBody>\n                      </Card>\n\n                      <Card bg={cardBg} border=\"1px\" borderColor={borderColor}>\n                        <CardHeader>\n                          <Heading size=\"sm\">Throughput</Heading>\n                        </CardHeader>\n                        <CardBody>\n                          <VStack spacing={4} align=\"stretch\">\n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Requests/min</Text>\n                              <Text fontWeight=\"semibold\">\n                                {formatNumber(analyticsData?.performance?.throughput || 0)}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={Math.min((analyticsData?.performance?.throughput || 0) / 1000 * 100, 100)} \n                              colorScheme=\"blue\" \n                            />\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Bot Uptime</Text>\n                              <Text fontWeight=\"semibold\">\n                                {analyticsData?.overview?.botUptime || '0h 0m'}\n                              </Text>\n                            </HStack>\n                            \n                            <HStack justify=\"space-between\">\n                              <Text fontSize=\"sm\">Grupos Autorizados</Text>\n                              <Text fontWeight=\"semibold\">\n                                {groupStats?.gruposAutorizados || 0} / {groupStats?.totalGrupos || 0}\n                              </Text>\n                            </HStack>\n                            <Progress \n                              value={(groupStats?.gruposAutorizados || 0) / (groupStats?.totalGrupos || 1) * 100} \n                              colorScheme=\"green\" \n                            />\n                          </VStack>\n                        </CardBody>\n                      </Card>\n                    </SimpleGrid>\n                  </VStack>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </CardBody>\n        </Card>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default Analytics;\n\n\n\n"],"names":["Analytics","timeRange","setTimeRange","useState","activeTab","setActiveTab","useToast","cardBg","useColorModeValue","borderColor","analyticsData","isLoading","error","useQuery","apiService","userStats","groupStats","aporteStats","pedidoStats","getGrowthColor","growth","getGrowthIcon","FaArrowUp","FaArrowDown","FaClock","formatNumber","num","formatPercentage","jsxs","Alert","jsx","AlertIcon","Box","VStack","Flex","Heading","Text","HStack","Select","e","Button","FaDownload","SimpleGrid","Card","CardBody","Stat","StatLabel","Icon","FaUsers","StatNumber","StatHelpText","StatArrow","_a","FaWhatsapp","_b","FaFileAlt","_c","_d","Tabs","TabList","Tab","FaChartLine","FaServer","TabPanels","TabPanel","CardHeader","_e","Progress","_f","_g","_h","_i","_j","key","value","Table","Thead","Tr","Th","Tbody","_k","content","Td","Badge","_l","_m","_n","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y"],"mappings":"uyBA4GO,MAAMA,GAAsB,IAAM,+DACvC,KAAM,CAACC,EAAWC,EAAY,EAAIC,GAAAA,SAAS,IAAI,EACzC,CAACC,GAAWC,EAAY,EAAIF,GAAAA,SAAS,CAAC,EAE9BG,GAAA,EACd,MAAMC,EAASC,GAAkB,QAAS,UAAU,EAC9CC,EAAcD,GAAkB,WAAY,UAAU,EAGtD,CAAE,KAAME,EAAe,UAAAC,GAAW,MAAAC,GAAUC,EAChD,CAAC,YAAaZ,CAAS,EACvB,IAAMa,EAAW,aAAab,CAAS,CAAA,EAGnC,CAAE,KAAMc,CAAA,EAAcF,EAAS,YAAaC,EAAW,eAAe,EACtE,CAAE,KAAME,CAAA,EAAeH,EAAS,aAAcC,EAAW,aAAa,EACtE,CAAE,KAAMG,CAAA,EAAgBJ,EAAS,cAAeC,EAAW,cAAc,EACzE,CAAE,KAAMI,CAAA,EAAgBL,EAAS,cAAeC,EAAW,cAAc,EAEzEK,EAAkBC,GAClBA,EAAS,EAAU,QACnBA,EAAS,EAAU,MAChB,OAGHC,GAAiBD,GACjBA,EAAS,EAAUE,GACnBF,EAAS,EAAUG,GAChBC,GAGHC,EAAgBC,GAChBA,GAAO,IAAgB,IAAIA,EAAM,KAAS,QAAQ,CAAC,CAAC,IACpDA,GAAO,IAAa,IAAIA,EAAM,KAAM,QAAQ,CAAC,CAAC,IAC3CA,EAAI,SAAA,EAGPC,EAAoBD,GACjB,GAAGA,EAAI,QAAQ,CAAC,CAAC,IAG1B,OAAId,EAEAgB,EAAAA,KAACC,GAAA,CAAM,OAAO,QACZ,SAAA,CAAAC,EAAAA,IAACC,GAAA,EAAU,EAAE,+BACiBnB,EAAc,OAAA,EAC9C,QAKDoB,GAAA,CACC,SAAAJ,EAAAA,KAACK,GAAO,QAAS,EAAG,MAAM,UAExB,SAAA,CAAAL,EAAAA,KAACM,GAAA,CAAK,MAAM,SAAS,QAAQ,gBAC3B,SAAA,CAAAN,OAACI,GAAA,CACC,SAAA,CAAAF,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,SAAA,yBAAsB,QACxCC,EAAA,CAAK,MAAM,WAAW,GAAI,EAAG,SAAA,gDAAA,CAE9B,CAAA,EACF,EACAR,EAAAA,KAACS,EAAA,CAAO,QAAS,EACf,SAAA,CAAAT,EAAAA,KAACU,GAAA,CACC,MAAOrC,EACP,SAAWsC,GAAMrC,GAAaqC,EAAE,OAAO,KAAK,EAC5C,KAAK,QAEL,SAAA,CAAAT,EAAAA,IAAC,SAAA,CAAO,MAAM,KAAK,SAAA,aAAU,EAC7BA,EAAAA,IAAC,SAAA,CAAO,MAAM,KAAK,SAAA,iBAAc,EACjCA,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,kBAAe,EACnCA,EAAAA,IAAC,SAAA,CAAO,MAAM,MAAM,SAAA,iBAAA,CAAe,CAAA,CAAA,CAAA,EAErCA,EAAAA,IAACU,GAAA,CACC,eAAWC,GAAA,EAAW,EACtB,YAAY,OACZ,QAAQ,UACT,SAAA,UAAA,CAAA,CAED,CAAA,CACF,CAAA,EACF,EAGAb,EAAAA,KAACc,EAAA,CAAW,QAAS,CAAE,KAAM,EAAG,GAAI,EAAG,GAAI,CAAA,EAAK,QAAS,EACvD,SAAA,CAAAZ,EAAAA,IAACa,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAAqB,EAAAA,IAACc,EAAA,CACC,SAAAhB,EAAAA,KAACiB,EAAA,CACC,SAAA,CAAAf,EAAAA,IAACgB,EAAA,CACC,gBAACT,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIC,GAAS,MAAM,WAAW,EACpClB,EAAAA,IAACM,GAAK,SAAA,kBAAA,CAAgB,CAAA,CAAA,CACxB,CAAA,CACF,QACCa,EAAA,CAAY,SAAAxB,GAAaV,GAAA,YAAAA,EAAW,gBAAiB,CAAC,EAAE,SACxDmC,EAAA,CACC,SAAA,CAAApB,EAAAA,IAACqB,EAAA,CAAU,KAAK,UAAA,CAAW,IAC1BC,EAAA1C,GAAA,YAAAA,EAAe,SAAf,YAAA0C,EAAuB,cAAe,EAAE,uBAAA,CAAA,CAC3C,CAAA,CAAA,CACF,EACF,EACF,EAEAtB,EAAAA,IAACa,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAAqB,EAAAA,IAACc,EAAA,CACC,SAAAhB,EAAAA,KAACiB,EAAA,CACC,SAAA,CAAAf,EAAAA,IAACgB,EAAA,CACC,gBAACT,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIM,GAAY,MAAM,YAAY,EACxCvB,EAAAA,IAACM,GAAK,SAAA,gBAAA,CAAc,CAAA,CAAA,CACtB,CAAA,CACF,QACCa,EAAA,CAAY,SAAAxB,GAAaT,GAAA,YAAAA,EAAY,cAAe,CAAC,EAAE,SACvDkC,EAAA,CACC,SAAA,CAAApB,EAAAA,IAACqB,EAAA,CAAU,KAAK,UAAA,CAAW,IAC1BG,EAAA5C,GAAA,YAAAA,EAAe,SAAf,YAAA4C,EAAuB,eAAgB,EAAE,uBAAA,CAAA,CAC5C,CAAA,CAAA,CACF,EACF,EACF,EAEAxB,EAAAA,IAACa,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAAqB,EAAAA,IAACc,EAAA,CACC,SAAAhB,EAAAA,KAACiB,EAAA,CACC,SAAA,CAAAf,EAAAA,IAACgB,EAAA,CACC,gBAACT,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIQ,GAAW,MAAM,aAAa,EACxCzB,EAAAA,IAACM,GAAK,SAAA,SAAA,CAAO,CAAA,CAAA,CACf,CAAA,CACF,QACCa,EAAA,CAAY,SAAAxB,GAAaR,GAAA,YAAAA,EAAa,eAAgB,CAAC,EAAE,SACzDiC,EAAA,CACC,SAAA,CAAApB,EAAAA,IAACqB,EAAA,CAAU,KAAK,UAAA,CAAW,IAC1BK,EAAA9C,GAAA,YAAAA,EAAe,SAAf,YAAA8C,EAAuB,gBAAiB,EAAE,uBAAA,CAAA,CAC7C,CAAA,CAAA,CACF,EACF,EACF,EAEA1B,EAAAA,IAACa,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAAqB,EAAAA,IAACc,EAAA,CACC,SAAAhB,EAAAA,KAACiB,EAAA,CACC,SAAA,CAAAf,EAAAA,IAACgB,EAAA,CACC,gBAACT,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIvB,GAAS,MAAM,aAAa,EACtCM,EAAAA,IAACM,GAAK,SAAA,SAAA,CAAO,CAAA,CAAA,CACf,CAAA,CACF,QACCa,EAAA,CAAY,SAAAxB,GAAaP,GAAA,YAAAA,EAAa,eAAgB,CAAC,EAAE,SACzDgC,EAAA,CACC,SAAA,CAAApB,EAAAA,IAACqB,EAAA,CAAU,KAAK,UAAA,CAAW,IAC1BM,EAAA/C,GAAA,YAAAA,EAAe,SAAf,YAAA+C,EAAuB,gBAAiB,EAAE,uBAAA,CAAA,CAC7C,CAAA,CAAA,CACF,EACF,CAAA,CACF,CAAA,EACF,EAGA3B,MAACa,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAAqB,EAAAA,IAACc,EAAA,CACC,SAAAhB,EAAAA,KAAC8B,GAAA,CAAK,MAAOtD,GAAW,SAAUC,GAChC,SAAA,CAAAuB,OAAC+B,GAAA,CACC,SAAA,CAAA7B,EAAAA,IAAC8B,EAAA,CACC,gBAACvB,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIc,EAAA,CAAa,EACvB/B,EAAAA,IAACM,GAAK,SAAA,SAAA,CAAO,CAAA,CAAA,CACf,CAAA,CACF,EACAN,EAAAA,IAAC8B,EAAA,CACC,SAAAhC,EAAAA,KAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIC,EAAA,CAAS,EACnBlB,EAAAA,IAACM,GAAK,SAAA,UAAA,CAAQ,CAAA,CAAA,CAChB,CAAA,CACF,EACAN,EAAAA,IAAC8B,EAAA,CACC,SAAAhC,EAAAA,KAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIQ,EAAA,CAAW,EACrBzB,EAAAA,IAACM,GAAK,SAAA,WAAA,CAAS,CAAA,CAAA,CACjB,CAAA,CACF,EACAN,EAAAA,IAAC8B,EAAA,CACC,SAAAhC,EAAAA,KAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CAAK,GAAIe,EAAA,CAAU,EACpBhC,EAAAA,IAACM,GAAK,SAAA,aAAA,CAAW,CAAA,CAAA,CACnB,CAAA,CACF,CAAA,EACF,SAEC2B,GAAA,CAEC,SAAA,CAAAjC,EAAAA,IAACkC,GACC,SAAApC,OAACK,EAAA,CAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAH,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,SAAA,kBAAe,EAElCP,EAAAA,KAACc,EAAA,CAAW,QAAS,CAAE,KAAM,EAAG,GAAI,CAAA,EAAK,QAAS,EAEhD,SAAA,CAAAd,OAACe,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,sBAAU,CAAA,CAC/B,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,2BAAwB,EAC5CN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAa8B,EAAAxD,GAAA,YAAAA,EAAe,aAAf,YAAAwD,EAA2B,mBAAoB,CAAC,CAAA,CAChE,CAAA,EACF,EACApC,EAAAA,IAACqC,EAAA,CACC,SAAQC,EAAA1D,GAAA,YAAAA,EAAe,aAAf,YAAA0D,EAA2B,mBAAoB,KAAMrD,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IAC9F,YAAY,MAAA,CAAA,EAGda,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,6BAA0B,EAC9CN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAaiC,EAAA3D,GAAA,YAAAA,EAAe,aAAf,YAAA2D,EAA2B,oBAAqB,CAAC,CAAA,CACjE,CAAA,EACF,EACAvC,EAAAA,IAACqC,EAAA,CACC,SAAQG,EAAA5D,GAAA,YAAAA,EAAe,aAAf,YAAA4D,EAA2B,oBAAqB,KAAMvD,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IAC/F,YAAY,OAAA,CAAA,EAGda,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,6BAA0B,EAC9CN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAamC,EAAA7D,GAAA,YAAAA,EAAe,aAAf,YAAA6D,EAA2B,qBAAsB,CAAC,CAAA,CAClE,CAAA,EACF,EACAzC,EAAAA,IAACqC,EAAA,CACC,SAAQK,EAAA9D,GAAA,YAAAA,EAAe,aAAf,YAAA8D,EAA2B,qBAAsB,KAAMzD,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IAChG,YAAY,QAAA,CAAA,CACd,CAAA,CACF,CAAA,CACF,CAAA,EACF,SAGC4B,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,sBAAU,CAAA,CAC/B,EACAL,EAAAA,IAACc,EAAA,CACC,SAAAd,EAAAA,IAACG,EAAA,CAAO,QAAS,EAAG,MAAM,UACvB,UAAAvB,GAAA,YAAAA,EAAe,SAAU,OAAO,QAAQA,EAAc,MAAM,EAAE,IAAI,CAAC,CAAC+D,EAAKC,CAAK,IAC7E9C,EAAAA,KAACS,EAAA,CAAiB,QAAQ,gBACxB,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,cAAc,aAC/B,SAAAqC,EAAI,QAAQ,SAAU,EAAE,CAAA,CAC3B,SACCpC,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACiB,EAAA,CACC,GAAI1B,GAAcqD,CAAe,EACjC,MAAO,GAAGvD,EAAeuD,CAAe,CAAC,MAAA,CAAA,EAE3C9C,EAAAA,KAACQ,EAAA,CACC,WAAW,WACX,MAAO,GAAGjB,EAAeuD,CAAe,CAAC,OAEvC,SAAA,CAAAA,EAAmB,EAAI,IAAM,GAAKA,EAAiB,GAAA,CAAA,CAAA,CACvD,CAAA,CACF,CAAA,GAfWD,CAgBb,CACD,CAAA,CACH,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,SAGC9B,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,iCAAqB,CAAA,CAC1C,QACCS,EAAA,CACC,SAAAhB,OAAC+C,IAAM,QAAQ,SAAS,KAAK,KAC3B,SAAA,CAAA7C,EAAAA,IAAC8C,GAAA,CACC,gBAACC,GAAA,CACC,SAAA,CAAA/C,EAAAA,IAACgD,GAAG,SAAA,QAAA,CAAM,EACVhD,EAAAA,IAACgD,GAAG,SAAA,MAAA,CAAI,EACRhD,EAAAA,IAACgD,GAAG,SAAA,QAAA,CAAM,EACVhD,EAAAA,IAACgD,GAAG,SAAA,UAAA,CAAQ,EACZhD,EAAAA,IAACgD,GAAG,SAAA,aAAA,CAAW,CAAA,CAAA,CACjB,CAAA,CACF,EACAhD,EAAAA,IAACiD,GAAA,CACE,UAAAC,EAAAtE,GAAA,YAAAA,EAAe,aAAf,YAAAsE,EAA2B,MAAM,EAAG,GAAG,IAAKC,GAC3CrD,EAAAA,KAACiD,GAAA,CACC,SAAA,CAAA/C,EAAAA,IAACoD,GACC,SAAApD,EAAAA,IAACM,EAAA,CAAK,WAAW,SAAU,SAAA6C,EAAQ,MAAM,CAAA,CAC3C,EACAnD,EAAAA,IAACoD,EAAA,CACC,SAAApD,EAAAA,IAACqD,EAAA,CAAM,YAAY,OAAO,QAAQ,SAC/B,SAAAF,EAAQ,IAAA,CACX,CAAA,CACF,EACAnD,EAAAA,IAACoD,EAAA,CAAI,SAAAzD,EAAawD,EAAQ,KAAK,EAAE,EACjCnD,EAAAA,IAACoD,EAAA,CAAI,SAAAzD,EAAawD,EAAQ,KAAK,EAAE,EACjCnD,EAAAA,IAACoD,EAAA,CAAI,SAAAzD,EAAawD,EAAQ,MAAM,CAAA,CAAE,CAAA,GAX3BA,EAAQ,EAYjB,EACD,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,QAGCjB,EAAA,CACC,SAAApC,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAH,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,SAAA,uBAAoB,EAEvCP,EAAAA,KAACc,EAAA,CAAW,QAAS,CAAE,KAAM,EAAG,GAAI,CAAA,EAAK,QAAS,EAChD,SAAA,CAAAd,OAACe,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,gCAAoB,CAAA,CACzC,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,MAAM,SAAA,QAAK,EAC9BrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,iBAAA,CAAe,CAAA,EACrC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAArB,GAAA,YAAAA,EAAW,cAAe,CAAA,CAAE,CAAA,EAC3D,EACAe,EAAAA,IAACqC,EAAA,CAAS,QAAQpD,GAAA,YAAAA,EAAW,cAAe,KAAMA,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IAAK,YAAY,KAAA,CAAM,EAE1Ga,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,OAAO,SAAA,UAAO,EACjCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,WAAA,CAAS,CAAA,EAC/B,QACCA,EAAA,CAAK,WAAW,WAAY,UAAArB,GAAA,YAAAA,EAAW,iBAAkB,CAAA,CAAE,CAAA,EAC9D,EACAe,EAAAA,IAACqC,EAAA,CAAS,QAAQpD,GAAA,YAAAA,EAAW,iBAAkB,KAAMA,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IAAK,YAAY,MAAA,CAAO,EAE9Ga,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,QAAQ,SAAA,YAAS,EACpCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,aAAA,CAAW,CAAA,EACjC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAArB,GAAA,YAAAA,EAAW,mBAAoB,CAAA,CAAE,CAAA,EAChE,EACAe,EAAAA,IAACqC,EAAA,CAAS,QAAQpD,GAAA,YAAAA,EAAW,mBAAoB,KAAMA,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IAAK,YAAY,OAAA,CAAQ,EAEjHa,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,OAAO,SAAA,UAAO,EACjCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,UAAA,CAAQ,CAAA,EAC9B,EACAN,MAACM,EAAA,CAAK,WAAW,WACb,4BAAW,gBAAiB,KAAMrB,GAAA,YAAAA,EAAW,cAAe,KAAMA,GAAA,YAAAA,EAAW,iBAAkB,KAAMA,GAAA,YAAAA,EAAW,mBAAoB,EAAA,CACxI,CAAA,EACF,EACAe,EAAAA,IAACqC,EAAA,CACC,SAASpD,GAAA,YAAAA,EAAW,gBAAiB,KAAMA,GAAA,YAAAA,EAAW,cAAe,KAAMA,GAAA,YAAAA,EAAW,iBAAkB,KAAMA,GAAA,YAAAA,EAAW,mBAAoB,MAAOA,GAAA,YAAAA,EAAW,gBAAiB,GAAK,IACrL,YAAY,MAAA,CAAA,CACd,CAAA,CACF,CAAA,CACF,CAAA,EACF,SAEC4B,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,iCAAqB,CAAA,CAC1C,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,4BAAyB,QAC5CA,EAAA,CAAK,WAAW,WACd,WAAAgD,EAAA1E,GAAA,YAAAA,EAAe,aAAf,YAAA0E,EAA2B,qBAAsB,IAAA,CACpD,CAAA,EACF,EAEAxD,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,iBAAc,EAClCN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAiBiD,EAAA3E,GAAA,YAAAA,EAAe,aAAf,YAAA2E,EAA2B,aAAc,CAAC,CAAA,CAC9D,CAAA,EACF,EAEAzD,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,mBAAgB,EACpCN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAakD,EAAA5E,GAAA,YAAAA,EAAe,WAAf,YAAA4E,EAAyB,cAAe,CAAC,CAAA,CACzD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,QAGCtB,EAAA,CACC,SAAApC,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAH,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,SAAA,wBAAqB,EAExCP,EAAAA,KAACc,EAAA,CAAW,QAAS,CAAE,KAAM,EAAG,GAAI,CAAA,EAAK,QAAS,EAChD,SAAA,CAAAd,OAACe,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,8BAAkB,CAAA,CACvC,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,QAAQ,SAAA,YAAS,EACpCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,mBAAA,CAAiB,CAAA,EACvC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAAnB,GAAA,YAAAA,EAAa,mBAAoB,CAAA,CAAE,CAAA,EAClE,EACAa,EAAAA,IAACqC,EAAA,CAAS,QAAQlD,GAAA,YAAAA,EAAa,mBAAoB,KAAMA,GAAA,YAAAA,EAAa,eAAgB,GAAK,IAAK,YAAY,OAAA,CAAQ,EAEpHW,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,SAAS,SAAA,aAAU,EACtCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,aAAA,CAAW,CAAA,EACjC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAAnB,GAAA,YAAAA,EAAa,oBAAqB,CAAA,CAAE,CAAA,EACnE,EACAa,EAAAA,IAACqC,EAAA,CAAS,QAAQlD,GAAA,YAAAA,EAAa,oBAAqB,KAAMA,GAAA,YAAAA,EAAa,eAAgB,GAAK,IAAK,YAAY,QAAA,CAAS,EAEtHW,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,MAAM,SAAA,aAAU,EACnCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,oBAAA,CAAkB,CAAA,EACxC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAAnB,GAAA,YAAAA,EAAa,oBAAqB,CAAA,CAAE,CAAA,EACnE,EACAa,EAAAA,IAACqC,EAAA,CAAS,QAAQlD,GAAA,YAAAA,EAAa,oBAAqB,KAAMA,GAAA,YAAAA,EAAa,eAAgB,GAAK,IAAK,YAAY,KAAA,CAAM,CAAA,CAAA,CACrH,CAAA,CACF,CAAA,EACF,SAEC0B,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,8BAAkB,CAAA,CACvC,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,QAAQ,SAAA,cAAW,EACtCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,qBAAA,CAAmB,CAAA,EACzC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAAlB,GAAA,YAAAA,EAAa,qBAAsB,CAAA,CAAE,CAAA,EACpE,EACAY,EAAAA,IAACqC,EAAA,CAAS,QAAQjD,GAAA,YAAAA,EAAa,qBAAsB,KAAMA,GAAA,YAAAA,EAAa,eAAgB,GAAK,IAAK,YAAY,OAAA,CAAQ,EAEtHU,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,SAAS,SAAA,aAAU,EACtCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,WAAA,CAAS,CAAA,EAC/B,QACCA,EAAA,CAAK,WAAW,WAAY,UAAAlB,GAAA,YAAAA,EAAa,oBAAqB,CAAA,CAAE,CAAA,EACnE,EACAY,EAAAA,IAACqC,EAAA,CAAS,QAAQjD,GAAA,YAAAA,EAAa,oBAAqB,KAAMA,GAAA,YAAAA,EAAa,eAAgB,GAAK,IAAK,YAAY,QAAA,CAAS,EAEtHU,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAT,OAACS,EAAA,CACC,SAAA,CAAAP,EAAAA,IAACqD,EAAA,CAAM,YAAY,OAAO,SAAA,aAAU,EACpCrD,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,eAAA,CAAa,CAAA,EACnC,QACCA,EAAA,CAAK,WAAW,WAAY,UAAAlB,GAAA,YAAAA,EAAa,mBAAoB,CAAA,CAAE,CAAA,EAClE,EACAY,EAAAA,IAACqC,EAAA,CAAS,QAAQjD,GAAA,YAAAA,EAAa,mBAAoB,KAAMA,GAAA,YAAAA,EAAa,eAAgB,GAAK,IAAK,YAAY,MAAA,CAAO,CAAA,CAAA,CACrH,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,QAGC8C,EAAA,CACC,SAAApC,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAH,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,SAAA,0BAAuB,EAE1CP,EAAAA,KAACc,EAAA,CAAW,QAAS,CAAE,KAAM,EAAG,GAAI,CAAA,EAAK,QAAS,EAChD,SAAA,CAAAd,OAACe,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,gCAAoB,CAAA,CACzC,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,sBAAmB,EACvCR,EAAAA,KAACQ,EAAA,CAAK,WAAW,WACd,SAAA,GAAAmD,EAAA7E,GAAA,YAAAA,EAAe,cAAf,YAAA6E,EAA4B,eAAgB,EAAE,IAAA,CAAA,CACjD,CAAA,EACF,EACAzD,EAAAA,IAACqC,EAAA,CACC,MAAO,KAAK,OAAKqB,EAAA9E,GAAA,YAAAA,EAAe,cAAf,YAAA8E,EAA4B,eAAgB,GAAK,IAAO,IAAK,GAAG,EACjF,cAAaC,EAAA/E,GAAA,YAAAA,EAAe,cAAf,YAAA+E,EAA4B,cAAe,IAAM,QAAU,QAAA,CAAA,EAG1E7D,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,SAAM,EAC1BN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAiBsD,GAAAhF,GAAA,YAAAA,EAAe,cAAf,YAAAgF,GAA4B,SAAU,CAAC,CAAA,CAC3D,CAAA,EACF,EACA5D,MAACqC,GAAS,QAAOwB,GAAAjF,GAAA,YAAAA,EAAe,cAAf,YAAAiF,GAA4B,SAAU,EAAG,YAAY,QAAQ,EAE9E/D,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,gBAAa,EACjCN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAiBwD,GAAAlF,GAAA,YAAAA,EAAe,cAAf,YAAAkF,GAA4B,YAAa,CAAC,CAAA,CAC9D,CAAA,EACF,EACA9D,EAAAA,IAACqC,EAAA,CACC,QAAO0B,GAAAnF,GAAA,YAAAA,EAAe,cAAf,YAAAmF,GAA4B,YAAa,EAChD,cAAaC,GAAApF,GAAA,YAAAA,EAAe,cAAf,YAAAoF,GAA4B,WAAY,EAAI,QAAU,KAAA,CAAA,CACrE,CAAA,CACF,CAAA,CACF,CAAA,EACF,SAECnD,EAAA,CAAK,GAAIpC,EAAQ,OAAO,MAAM,YAAAE,EAC7B,SAAA,CAAAqB,EAAAA,IAACmC,GACC,SAAAnC,EAAAA,IAACK,EAAA,CAAQ,KAAK,KAAK,sBAAU,CAAA,CAC/B,QACCS,EAAA,CACC,SAAAhB,OAACK,GAAO,QAAS,EAAG,MAAM,UACxB,SAAA,CAAAL,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,eAAY,EAChCN,EAAAA,IAACM,GAAK,WAAW,WACd,aAAa2D,GAAArF,GAAA,YAAAA,EAAe,cAAf,YAAAqF,GAA4B,aAAc,CAAC,CAAA,CAC3D,CAAA,EACF,EACAjE,EAAAA,IAACqC,EAAA,CACC,MAAO,KAAK,OAAK6B,GAAAtF,GAAA,YAAAA,EAAe,cAAf,YAAAsF,GAA4B,aAAc,GAAK,IAAO,IAAK,GAAG,EAC/E,YAAY,MAAA,CAAA,EAGdpE,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,aAAU,QAC7BA,EAAA,CAAK,WAAW,WACd,WAAA6D,GAAAvF,GAAA,YAAAA,EAAe,WAAf,YAAAuF,GAAyB,YAAa,OAAA,CACzC,CAAA,EACF,EAEArE,EAAAA,KAACS,EAAA,CAAO,QAAQ,gBACd,SAAA,CAAAP,EAAAA,IAACM,EAAA,CAAK,SAAS,KAAK,SAAA,qBAAkB,EACtCR,EAAAA,KAACQ,EAAA,CAAK,WAAW,WACd,SAAA,EAAApB,GAAA,YAAAA,EAAY,oBAAqB,EAAE,OAAIA,GAAA,YAAAA,EAAY,cAAe,CAAA,CAAA,CACrE,CAAA,EACF,EACAc,EAAAA,IAACqC,EAAA,CACC,QAAQnD,GAAA,YAAAA,EAAY,oBAAqB,KAAMA,GAAA,YAAAA,EAAY,cAAe,GAAK,IAC/E,YAAY,OAAA,CAAA,CACd,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CACF,EACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAEJ"}