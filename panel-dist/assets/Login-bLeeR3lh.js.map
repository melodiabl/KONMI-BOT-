{"version":3,"file":"Login-bLeeR3lh.js","sources":["../../node_modules/@chakra-ui/react/dist/esm/form-control/form-error.mjs","../../src/pages/Login.tsx"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx } from '@chakra-ui/utils';\nimport { useFormControlContext } from './form-control.mjs';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nconst FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!field?.isInvalid)\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field?.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nconst FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!field?.isInvalid)\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport { FormErrorIcon, FormErrorMessage, useFormErrorStyles };\n","import React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  HStack,\n  Heading,\n  Text,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Button,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  useToast,\n  Card,\n  CardBody,\n  Select,\n  Icon,\n  useColorModeValue,\n  Divider,\n  Alert,\n  AlertIcon,\n  Spinner,\n  InputRightElement,\n  IconButton,\n} from '@chakra-ui/react';\nimport { \n  FaUser, \n  FaLock, \n  FaEye, \n  FaEyeSlash, \n  FaShieldAlt,\n  FaSignInAlt,\n  FaWhatsapp,\n  FaUsers,\n  FaCog\n} from 'react-icons/fa';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\ninterface LoginFormData {\n  username: string;\n  password: string;\n  role: string;\n}\n\nconst roleOptions = [\n  { value: 'owner', label: 'Propietario', icon: FaShieldAlt, color: 'purple.500', description: 'Acceso total al sistema' },\n  { value: 'admin', label: 'Administrador', icon: FaShieldAlt, color: 'red.500', description: 'Acceso completo al sistema' },\n  { value: 'moderador', label: 'Moderador', icon: FaCog, color: 'green.500', description: 'Moderación de grupos' },\n  { value: 'usuario', label: 'Usuario', icon: FaUser, color: 'gray.500', description: 'Acceso básico' },\n];\n\nexport const Login: React.FC = () => {\n  const [formData, setFormData] = useState<LoginFormData>({\n    username: '',\n    password: '',\n    role: ''\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState<Partial<LoginFormData>>({});\n\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const toast = useToast();\n\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const borderColor = useColorModeValue('gray.200', 'gray.600');\n  const bgGradient = useColorModeValue(\n    'linear(to-br, blue.50, purple.50)',\n    'linear(to-br, gray.900, blue.900)'\n  );\n\n  const from = location.state?.from?.pathname || '/';\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<LoginFormData> = {};\n\n    if (!formData.username.trim()) {\n      newErrors.username = 'El nombre de usuario es requerido';\n    }\n\n    if (!formData.password) {\n      newErrors.password = 'La contraseña es requerida';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'La contraseña debe tener al menos 6 caracteres';\n    }\n\n    if (!formData.role) {\n      newErrors.role = 'Debe seleccionar un rol';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof LoginFormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    // Limpiar error del campo cuando el usuario empiece a escribir\n    if (errors[field]) {\n      setErrors(prev => ({ ...prev, [field]: undefined }));\n    }\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    setIsLoading(true);\n    setErrors({});\n\n    try {\n      // Enviar también el rol al backend\n      await login(formData.username, formData.password);\n      \n      toast({\n        title: '¡Bienvenido!',\n        description: `Has iniciado sesión como ${formData.role}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n\n      // Redirigir al usuario a la página que intentaba acceder o al dashboard\n      navigate(from, { replace: true });\n    } catch (error: any) {\n      console.error('Error de login:', error);\n      \n      let errorMessage = 'Error al iniciar sesión';\n      \n      if (error.response?.status === 401) {\n        errorMessage = 'Credenciales incorrectas';\n      } else if (error.response?.status === 403) {\n        errorMessage = 'No tienes permisos para acceder con este rol';\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.message) {\n        errorMessage = error.message;\n      }\n\n      toast({\n        title: 'Error de autenticación',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const selectedRole = roleOptions.find(role => role.value === formData.role);\n\n  return (\n    <Box\n      minH=\"100vh\"\n      bgGradient={bgGradient}\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      p={4}\n    >\n      <Card\n        maxW=\"md\"\n        w=\"full\"\n        bg={cardBg}\n        border=\"1px\"\n        borderColor={borderColor}\n        shadow=\"xl\"\n        borderRadius=\"xl\"\n      >\n        <CardBody p={8}>\n          <VStack spacing={6} align=\"stretch\">\n            {/* Header */}\n            <VStack spacing={3} textAlign=\"center\">\n              <Box\n                p={3}\n                borderRadius=\"full\"\n                bg=\"green.500\"\n                color=\"white\"\n                fontSize=\"2xl\"\n              >\n                <FaWhatsapp />\n              </Box>\n              <Heading size=\"lg\" color=\"gray.700\">\n                KONMI BOT Panel\n              </Heading>\n              <Text color=\"gray.600\" fontSize=\"sm\">\n                Inicia sesión para acceder al sistema de gestión\n              </Text>\n            </VStack>\n\n            <Divider />\n\n\n            {/* Formulario */}\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"stretch\">\n                {/* Selector de Rol */}\n                <FormControl isInvalid={!!errors.role}>\n                  <FormLabel fontWeight=\"semibold\">Rol de Usuario</FormLabel>\n                  <Select\n                    value={formData.role}\n                    onChange={(e) => handleInputChange('role', e.target.value)}\n                    size=\"lg\"\n                    borderRadius=\"md\"\n                    placeholder=\"Selecciona un rol\"\n                  >\n                    <option value=\"\" disabled>Selecciona un rol</option>\n                    {roleOptions.map((role) => (\n                      <option key={role.value} value={role.value}>\n                        {role.label}\n                      </option>\n                    ))}\n                  </Select>\n                  {errors.role && <FormErrorMessage>{errors.role}</FormErrorMessage>}\n                </FormControl>\n\n                {/* Información del Rol Seleccionado */}\n                {selectedRole && (\n                  <Alert\n                    status=\"info\"\n                    borderRadius=\"md\"\n                    bg={`${selectedRole.color}50`}\n                    border=\"1px\"\n                    borderColor={`${selectedRole.color}200`}\n                  >\n                    <AlertIcon color={selectedRole.color} />\n                    <Box>\n                      <Text fontWeight=\"semibold\" color={selectedRole.color}>\n                        {selectedRole.label}\n                      </Text>\n                      <Text fontSize=\"sm\" color=\"gray.600\">\n                        {selectedRole.description}\n                      </Text>\n                    </Box>\n                  </Alert>\n                )}\n\n                {/* Usuario */}\n                <FormControl isInvalid={!!errors.username}>\n                  <FormLabel fontWeight=\"semibold\">Usuario</FormLabel>\n                  <InputGroup size=\"lg\">\n                    <InputLeftElement pointerEvents=\"none\">\n                      <Icon as={FaUser} color=\"gray.400\" />\n                    </InputLeftElement>\n                    <Input\n                      type=\"text\"\n                      placeholder=\"Ingresa tu usuario\"\n                      value={formData.username}\n                      onChange={(e) => handleInputChange('username', e.target.value)}\n                      borderRadius=\"md\"\n                    />\n                  </InputGroup>\n                  {errors.username && <FormErrorMessage>{errors.username}</FormErrorMessage>}\n                </FormControl>\n\n                {/* Contraseña */}\n                <FormControl isInvalid={!!errors.password}>\n                  <FormLabel fontWeight=\"semibold\">Contraseña</FormLabel>\n                  <InputGroup size=\"lg\">\n                    <InputLeftElement pointerEvents=\"none\">\n                      <Icon as={FaLock} color=\"gray.400\" />\n                    </InputLeftElement>\n                    <Input\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"Ingresa tu contraseña\"\n                      value={formData.password}\n                      onChange={(e) => handleInputChange('password', e.target.value)}\n                      borderRadius=\"md\"\n                    />\n                    <InputRightElement>\n                      <IconButton\n                        aria-label={showPassword ? 'Ocultar contraseña' : 'Mostrar contraseña'}\n                        icon={<Icon as={showPassword ? FaEyeSlash : FaEye} />}\n                        onClick={() => setShowPassword(!showPassword)}\n                        variant=\"ghost\"\n                        size=\"sm\"\n                      />\n                    </InputRightElement>\n                  </InputGroup>\n                  {errors.password && <FormErrorMessage>{errors.password}</FormErrorMessage>}\n                </FormControl>\n\n                {/* Botón de Login */}\n                <Button\n                  type=\"submit\"\n                  colorScheme=\"green\"\n                  size=\"lg\"\n                  leftIcon={<Icon as={FaSignInAlt} />}\n                  isLoading={isLoading}\n                  loadingText=\"Iniciando sesión...\"\n                  borderRadius=\"md\"\n                  _hover={{\n                    transform: 'translateY(-2px)',\n                    boxShadow: 'lg',\n                  }}\n                  transition=\"all 0.2s\"\n                >\n                  Iniciar Sesión\n                </Button>\n              </VStack>\n            </form>\n\n            <Divider />\n\n            {/* Información adicional */}\n            <VStack spacing={2} textAlign=\"center\">\n              <Text fontSize=\"sm\" color=\"gray.500\">\n                ¿Problemas para acceder?\n              </Text>\n              <Text fontSize=\"xs\" color=\"gray.400\">\n                Contacta al administrador del sistema\n              </Text>\n            </VStack>\n          </VStack>\n        </CardBody>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n"],"names":["FormErrorStylesProvider","useFormErrorStyles","createContext","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","jsx","chakra","cx","FormErrorIcon","_className","Icon","roleOptions","FaShieldAlt","FaCog","FaUser","Login","formData","setFormData","useState","showPassword","setShowPassword","isLoading","setIsLoading","errors","setErrors","login","useAuth","navigate","useNavigate","location","useLocation","toast","useToast","cardBg","useColorModeValue","borderColor","bgGradient","from","_b","_a","validateForm","newErrors","handleInputChange","value","prev","handleSubmit","e","error","errorMessage","_d","_c","selectedRole","role","Box","Card","CardBody","VStack","jsxs","FaWhatsapp","Heading","Text","Divider","FormControl","FormLabel","Select","Alert","AlertIcon","InputGroup","InputLeftElement","Input","FaLock","InputRightElement","IconButton","FaEyeSlash","FaEye","Button","FaSignInAlt"],"mappings":"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","x_google_ignoreList":[0]}