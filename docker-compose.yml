name: ${COMPOSE_PROJECT_NAME:-konmibot}
services:
  db:
    image: postgres:16
    container_name: konmi-bot-db
    restart: always
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: superpass
      TZ: America/Asuncion
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    container_name: konmi-bot-adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  backend:
    image: konmibot-backend:latest
    container_name: konmi-bot-backend
    build: ./backend/full
    restart: always
    env_file:
      - ./backend/full/.env
    environment:
      # DB (si no usas DATABASE_URL)
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: superpass
      DB_NAME: appdb
      NODE_ENV: production
      PORT: "3001"
      TZ: America/Asuncion
      # Bot device label (WhatsApp)
      BOT_DEVICE: ubuntu
      BOT_DEVICE_NAME: "KONMI-BOT-"
      # Logging
      LOG_TO_FILE: "true"
      LOG_LEVEL: debug
      # Si prefieres usar DATABASE_URL, comentalo arriba y descomenta abajo
      # DATABASE_URL: postgres://appuser:superpass@db:5432/appdb
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - ./backend/full/storage:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/full/storage/subbot-exports:/app/storage/subbot-exports
      - ./create-subbot.sh:/app/create-subbot.sh
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Comando simplificado sin el script de espera
    command: ["/bin/sh", "-c", "sleep 10 && npm run migrate && node index.js"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3001/api/health | grep -q '\"status\":\"ok\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # NOTA: Caddy se ejecuta en HOST, no en contenedor

  # subbot-template eliminado: sub-bots corren en el mismo proceso del backend
