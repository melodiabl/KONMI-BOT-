services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: superpass
      TZ: America/Asuncion
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d appdb"]
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  backend:
    build: ./backend/full
    restart: always
    env_file:
      - ./backend/full/.env
    environment:
      # Si tu app usa variables individuales:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: superpass
      DB_NAME: appdb
      NODE_ENV: production
      PORT: "3001"
      TZ: America/Asuncion
      # O si usas DATABASE_URL en knexfile:
      # DATABASE_URL: postgres://appuser:superpass@db:5432/appdb
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3001:3001"
    volumes:
      - ./backend/full/storage:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/full/storage/subbot-exports:/app/storage/subbot-exports
      - ./create-subbot.sh:/app/create-subbot.sh
    # Comando simplificado sin el script de espera
    command: ["/bin/sh", "-c", "sleep 10 && npm run migrate && node index.js"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3001/api/health | grep -q '\"status\":\"ok\"' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  # NOTA: Caddy se ejecuta en HOST, no en contenedor

  # Plantilla de subbot (usar con overrides o script)
  subbot-template:
    build: ./backend/full
    restart: always
    env_file:
      - ./backend/full/.env
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: appuser
      DB_PASSWORD: superpass
      DB_NAME: appdb
      NODE_ENV: production
      PORT: "0" # no expone puerto HTTP
      TZ: America/Asuncion
      SUBBOT_CODE: "${SUBBOT_CODE}"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./backend/full/storage/auth/subbot-${SUBBOT_CODE}:/app/storage/auth/subbot-${SUBBOT_CODE}
      - ./backend/full/storage/subbot-exports:/app/storage/subbot-exports
    command: ["/bin/sh", "-c", "sleep 5 && node index.js"]
